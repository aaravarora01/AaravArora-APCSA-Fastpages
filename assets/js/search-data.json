{
  
    
        "post0": {
            "title": "AP CSA 2023 FRQ Questions 3 and 4",
            "content": "// Question 3A public void cleanData(double lower, double upper) { for (int i = 0; i &lt; temperatures.size(); i++) { if (temperatures.get(i) &gt; upper || temperatures.get(i) &lt; lower) { temperatures.remove(i); i--; } } } // Question 3B public int longestHeatWave(double threshold) { int current = 0; int max = 0; for (int i = 0; i &lt; temperatures.size(); i++) { if (temperatures.get(i) &gt; threshold) { current++; if (current &gt; max) { max = current; } } else { current = 0; } } return max; } . // Question 4A public boolean moveCandyToFirstRow(int col) { if (box[0][col] != null) { return true; } else { for (int i = 0; i &lt; box.length; i++) { if (box[i][col] != null) { box[0][col] = box[i][col]; box[i][col] = null; return true; } } } return false; } // Question 4B public Candy removeNextByFlavor(String flavor) { for (int row = box.length - 1; row &gt;= 0; row--) { for (int col = 0; col &lt; box[0].length; col++) { Candy c = box[row][col]; if (c != null) { if (c.getFlavor().equals(flavor)) { box[row][col] = null; return c; } } } } return null; } .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/collegeboard%20learning/2023/05/05/apfrq.html",
            "relUrl": "/jupyter/collegeboard%20learning/2023/05/05/apfrq.html",
            "date": " • May 5, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "Recursion, Sorting, ArrayList Hacks",
            "content": "Recursion . public void drawLine(int n) { if (n &gt; 0) { for (int i = 1; i &lt;= n; i++) { System.out.print(&quot;*&quot;); } System.out.println(); drawLine(n - 1); } } drawLine(10); . ********** ********* ******** ******* ****** ***** **** *** ** * . Sorting Hacks . public class Sorting { public static void Sort(ArrayList&lt;int[]&gt; arr) { int arrSize = arr.size(); for (int i = 1; i &lt; arrSize; i++) { int[] num = arr.get(i); int j = i - 1; while (j &gt;= 0 &amp;&amp; arr.get(j)[1] &lt; num[1]) { arr.set(j + 1, arr.get(j)); j--; } arr.set(j + 1, num); } } public static void main(String[] args) { ArrayList&lt;int[]&gt; arr = new ArrayList&lt;&gt;(); // Country #, Size arr.add(new int[]{1, 5}); arr.add(new int[]{2, 100}); arr.add(new int[]{3, 12}); arr.add(new int[]{4, 2}); Sort(arr); for (int i = 0; i &lt; arr.size(); i++) { System.out.println(arr.get(i)[0] + &quot;, &quot; + arr.get(i)[1]); } } } Sorting.main(null); . 2, 100 3, 12 1, 5 4, 2 . Array List . // Remove every other element from an arraylist import java.util.*; ArrayList&lt;String&gt; arr = new ArrayList&lt;String&gt;(); arr.add(&quot;Apple&quot;); arr.add(&quot;Ball&quot;); arr.add(&quot;Cat&quot;); arr.add(&quot;Dog&quot;); for (int i = 0; i &lt; arr.size(); i = i + 2) { arr.remove(arr.get(i)); } System.out.println(arr); // Test if two arraylists contain the same elements in reverse order ArrayList&lt;String&gt; normalArr = new ArrayList&lt;String&gt;(); ArrayList&lt;String&gt; reverseArr = new ArrayList&lt;String&gt;(); normalArr.add(&quot;Apple&quot;); reverseArr.add(&quot;Ball&quot;); normalArr.add(&quot;Ball&quot;); reverseArr.add(&quot;Apple&quot;); int indexNum = normalArr.size() - 1; for (int i = 0; i &lt; normalArr.size(); i++) { if (normalArr.get(i) != reverseArr.get(indexNum - i)) { System.out.println(&quot;Not in Reverse Order&quot;); } } System.out.println(&quot;In Reverse Order&quot;); . [Ball, Cat] In Reverse Order .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/collegeboard%20learning/2023/04/25/recursionsortingarraylist.html",
            "relUrl": "/jupyter/collegeboard%20learning/2023/04/25/recursionsortingarraylist.html",
            "date": " • Apr 25, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "Merge Sort",
            "content": "Hack 1 . public class StringMergeSort { public static void mergeSort(String[] arr) { if (arr.length &lt; 2) { return; } int middle = arr.length / 2; String[] L = new String[middle]; String[] R = new String[arr.length - middle]; for (int i = 0; i &lt; middle; i++) { L[i] = arr[i]; } for (int i = middle; i &lt; arr.length; i++) { R[i - middle] = arr[i]; } mergeSort(L); mergeSort(R); merge(arr, L, R); } public static void merge(String[] arr, String[] L, String[] R) { int i = 0; int j = 0; int k = 0; while (i &lt; L.length &amp;&amp; j &lt; R.length) { if (L[i].compareTo(R[j]) &lt; 0) { arr[k++] = L[i++]; } else { arr[k++] = R[j++]; } } while (i &lt; L.length) { arr[k++] = L[i++]; } while (j &lt; R.length) { arr[k++] = R[j++]; } } public static void main(String[] args) { String[] arr = {&quot;ball&quot;, &quot;apple&quot;, &quot;cat&quot;, &quot;dog&quot;}; mergeSort(arr); System.out.println(Arrays.toString(arr)); } } StringMergeSort.main(null); . [apple, ball, cat, dog] .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/collegeboard%20learning/2023/04/25/mergesort.html",
            "relUrl": "/jupyter/collegeboard%20learning/2023/04/25/mergesort.html",
            "date": " • Apr 25, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "CB FRQs",
            "content": "Methods and Control Structures . public class FRQ1 { public static int getNumberOfDigits(int num) { int length = String.valueOf(num).length(); return length; } public static int getDigit(int num, int n) { String numStr = Integer.toString(num); char digitChar = numStr.charAt(n-1); int digit = Character.getNumericValue(digitChar); return digit; } // Part A public static int getCheck(int num) { int digits = getNumberOfDigits(num); int sum = 0; for (int i = 1; i &lt;= digits; i++) { int currentDig = getDigit(num, i); currentDig = currentDig * (8 - i); sum += currentDig; } int digitsInSum = getNumberOfDigits(sum); return(getDigit(sum, digitsInSum)); } // Part B public static boolean isValid(int numWithCheckDigit) { int check = numWithCheckDigit % 10; int numToCheck = numWithCheckDigit / 10; numWithCheckDigit = numWithCheckDigit - check; numWithCheckDigit = numWithCheckDigit / 10; if (check == getCheck(numToCheck)) { return true; } else { return false; } } public static void main(String[] args) { int num1 = 1234567; int check1 = getCheck(num1); System.out.println(&quot;Check digit for &quot; + num1 + &quot; is &quot; + check1); int numWithCheck1 = num1 * 10 + check1; System.out.println(numWithCheck1 + &quot; is valid: &quot; + isValid(numWithCheck1)); } } FRQ1.main(null); . Check digit for 1234567 is 4 12345674 is valid: true . Classes . public class AdditionPattern { private int currentNum; private int add; private int startNum; public AdditionPattern(int c, int a) { currentNum = c; startNum = c; add = a; } public void next() { currentNum += add; } public int currentNumber() { return currentNum; } public int prev() { if (currentNum != startNum) { currentNum -= add; } return currentNum; } public static void main(String[] args) { AdditionPattern pattern = new AdditionPattern(0, 2); int currentNumber = pattern.currentNumber(); System.out.println(&quot;Current number: &quot; + currentNumber); // Expected output: 0 pattern.next(); currentNumber = pattern.currentNumber(); System.out.println(&quot;Current number: &quot; + currentNumber); // Expected output: 2 pattern.prev(); currentNumber = pattern.currentNumber(); System.out.println(&quot;Current number: &quot; + currentNumber); // Expected output: 0 pattern.prev(); currentNumber = pattern.currentNumber(); System.out.println(&quot;Current number: &quot; + currentNumber); // Expected output: 0 } } AdditionPattern.main(null); . Current number: 0 Current number: 2 Current number: 0 Current number: 0 . Arrays/ArrayLists . // Part A public void addMembers(String[] names, int gradYear) { for (int i = 0; i &lt; names.length; i++) { MemberInfo newMember = new MemberInfo(names[i], gradYear, true); memberList.add(newMember); } } // Part B public ArrayList&lt;MemberInfo&gt; removeMembers(int year) { ArrayList&lt;MemberInfo&gt; gradList = new ArrayList&lt;MemberInfo&gt;(); for (int k = 0; k &lt; memberList.size(); k++) { if (memberList.get(k).getGradYear() &lt;= year) { memberList.remove(k); if (memberList.get(k).inGoodStanding()) { gradList.add(k); } } } return gradList; } . 2D Arrays . // Part A public static boolean isNonZeroRow(int[][] array2D, int r) { private int count; for (int col = 0; col &lt; array2D[0].length; col++) { if (array2D[r][col] == 0) { return false; } else { count++; } } if (count == r[0].length) { return true; } } // Part B public static int[][] resize(int[][] array2D) { int newArrRow = 0; int[][] new2D = new int [numNonZeroRows(array2D)][array2D[0].length]; for (int row = 0; row &lt; array2D.length; row++) { if (isNonZeroRow(array2D, r)) { for (int c = 0; c &lt; array2D.length) { new2D[newArrRow][c] = array2D[row][c]; } newArrRow++; } } return new2D; } .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/collegeboard%20learning/2023/04/25/cbfrqs.html",
            "relUrl": "/jupyter/collegeboard%20learning/2023/04/25/cbfrqs.html",
            "date": " • Apr 25, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "Binary Search",
            "content": "public class Recursive { public static int binSearch(int[] array, int key, int low, int high) { // if the lowest integer is greater than the highest integer, return -1 because the array is unsorted if (low &gt; high) { return -1; } // get the middle index int middle = (low + high) / 2; // find what number is at the middle of the array, check if it&#39;s equal to the key if (array[middle] == key) { return middle; } // if the integer at the middle index is less than the key, do binary search again but increase middle by 1 else if (array[middle] &lt; key) { return binSearch(array, key, middle + 1, high); } // if the integer at the middle index is greater than the key, do binary search again but decrease middle by 1 else { return binSearch(array, key, low, middle - 1); } } // main method to test the binarysearch on the given array for the number 45 public static void main(String[] args) { int [] array = {1, 3, 5, 7, 9, 23, 45, 67}; // print out what the index is, if -1, the array was not sorted or the key was not found System.out.println(&quot;Index of 45 is &quot; + binSearch(array, 45, 0, array.length - 1)); } } Recursive.main(null); . Index of 45 is 6 .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/collegeboard%20learning/2023/04/25/binarysearch.html",
            "relUrl": "/jupyter/collegeboard%20learning/2023/04/25/binarysearch.html",
            "date": " • Apr 25, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Book Class Test",
            "content": "import java.lang.*; import java.time.format.DateTimeFormatter; import java.time.LocalDateTime; public class Book { private static int firstId = 0; public String title; public long bookId; public int bookCount; public Book(String t) { this.title = t; } public Book (String t, int b) { this.title = t; this.bookCount = b; this.bookId = generateId(bookCount); ++firstId; } public int getBookCount() { return(bookCount); } public static int generateId(int bookCount) { int bookId = firstId; return bookId; } public String toString() { return &quot;Title: &quot; + this.title + &quot; ID: &quot; + this.bookId + &quot; Count: &quot; + bookCount; } public static void main(String[] args) { Book b = new Book(&quot;AP CSA Book&quot;, 5); Book c = new Book(&quot;AP English Book&quot;, 5); System.out.println(b); System.out.println(c); } } Book.main(null); public class Textbook extends Book { // Novel and Textbook Attributes private int checkouts; private String company; private double shelfLifeInDays; private long checkoutStartTime; private int numCheckouts; public Textbook(String t, String c, int b) { super(t, b); this.company = c; } public String getTitle() { return this.title; } public String getCompany() { return company; } public void setCompany(String company) { this.company = company; } public void incrementCheckouts() { numCheckouts++; } private String getCheckOutTime() { DateTimeFormatter dtf = DateTimeFormatter.ofPattern(&quot;yyyy/MM/dd HH:mm:ss&quot;); LocalDateTime now = LocalDateTime.now(); return(dtf.format(now)); } public String toString() { return &quot;Title: &quot; + this.title + &quot; ID: &quot; + this.bookId + &quot; Company: &quot; + this.company; } public static void main(String[] args) { Textbook textbook = new Textbook(&quot;Computer Science A&quot;, &quot;CollegeBoard&quot;, 2); System.out.println(textbook); textbook.setCompany(&quot;New Company&quot;); System.out.println(textbook.getCompany()); System.out.println(textbook.getCheckOutTime()); } } Textbook.main(null); public class Novel extends Book { // Novel and Textbook Attributes private String author; private int checkouts; private double shelfLifeInDays; private long checkoutStartTime; private int numCheckouts; public Novel(String t, String a, int b, double s) { super(t, b); this.author = a; this.shelfLifeInDays = s; } public String getAuthor() { return this.author; } public String getTitle() { return this.title; } public void setAuthor(String author) { this.author = author; } public void incrementCheckouts() { numCheckouts++; } private String getCheckOutTime() { DateTimeFormatter dtf = DateTimeFormatter.ofPattern(&quot;yyyy/MM/dd HH:mm:ss&quot;); LocalDateTime now = LocalDateTime.now(); return(dtf.format(now)); } public String toString() { return &quot;Title: &quot; + this.title + &quot; ID: &quot; + this.bookId + &quot; Author: &quot; + this.author; } public static void main(String[] args) { Novel novel = new Novel(&quot;To Kill a Mockingbird&quot;, &quot;Harper Lee&quot;, 5, 2); System.out.println(novel); novel.setAuthor(&quot;New Author&quot;); System.out.println(novel.getAuthor()); System.out.println(novel.getCheckOutTime()); } } Novel.main(null); . Title: AP CSA Book ID: 0 Count: 5 Title: AP English Book ID: 1 Count: 5 Title: Computer Science A ID: 2 Company: CollegeBoard New Company 2023/04/21 09:39:22 Title: To Kill a Mockingbird ID: 3 Author: Harper Lee New Author 2023/04/21 09:39:22 .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/collegeboard%20learning/2023/04/20/bookclasstest.html",
            "relUrl": "/jupyter/collegeboard%20learning/2023/04/20/bookclasstest.html",
            "date": " • Apr 20, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Hashmap vs Binary Search Lookup",
            "content": "// imports random class import java.util.Random; public class TimeCompare { private HashMap&lt;Integer, Integer&gt; hashmap; private int[] keys; // time comparison method public TimeCompare(int numRecords) { hashmap = new HashMap&lt;&gt;(); keys = new int[numRecords]; Random random = new Random(); // for each key for (int i = 0; i &lt; numRecords; i++) { int key = random.nextInt(numRecords); hashmap.put(key, i); keys[i] = key; } } // removes the first and last keys to eliminate outliers public int binarySearchLookup(int key) { int start = 0; int end = keys.length - 1; while (start &lt;= end) { int middlekey = (start + end) / 2; if (keys[middlekey] == key) { return hashmap.get(keys[middlekey]); } else if (keys[middlekey] &lt; key) { start = middlekey + 1; } else { end = middlekey - 1; } } return -1; } public int hashmapLookup(int key) { return hashmap.getOrDefault(key, -1); } // 12 trials, 100 lookups, sets time for binarysearch and hashmap to 0 public void runBenchmark() { int numTrials = 12; int numLookups = 100; long binarySearchTotalTime = 0; long hashmapTotalTime = 0; for (int i = 0; i &lt; numTrials; i++) { // shuffle the keys array to get a random set of keys shuffleKeys(); // perform binary search lookups long binarySearchStartTime = System.nanoTime(); for (int j = 0; j &lt; numLookups; j++) { int key = keys[j]; binarySearchLookup(key); } long binarySearchEndTime = System.nanoTime(); binarySearchTotalTime += binarySearchEndTime - binarySearchStartTime; // perform hashmap lookups long hashmapStartTime = System.nanoTime(); for (int j = 0; j &lt; numLookups; j++) { int key = keys[j]; hashmapLookup(key); } long hashmapEndTime = System.nanoTime(); hashmapTotalTime += hashmapEndTime - hashmapStartTime; } // Find averages long binarySearchAvgTime = binarySearchTotalTime / (numTrials * numLookups); long hashmapAvgTime = hashmapTotalTime / (numTrials * numLookups); System.out.println(&quot;Binary search avg = &quot; + binarySearchAvgTime + &quot; ns&quot;); System.out.println(&quot;Hashmap avg = &quot; + hashmapAvgTime + &quot; ns&quot;); } // Generate random keys private void shuffleKeys() { Random random = new Random(); for (int i = keys.length - 1; i &gt; 0; i--) { int j = random.nextInt(i + 1); int temp = keys[i]; keys[i] = keys[j]; keys[j] = temp; } } // runs for 5000 keys public static void main(String[] args) { TimeCompare timeCompare = new TimeCompare(5000); timeCompare.runBenchmark(); } } TimeCompare.main(null); . Binary search avg = 731 ns Hashmap avg = 381 ns .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/2023/04/04/hashmapbinarysearch.html",
            "relUrl": "/jupyter/2023/04/04/hashmapbinarysearch.html",
            "date": " • Apr 4, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Notes/Reflection for CSU San Marcos Session",
            "content": "Notes . First generation students | Both had tough times in high school and college but still found success in later life | John: from San Diego, went to Palomar College, took 6 years to get a master’s degree | Computer science has applicability to other parts of life and other things you work on | Talks of creating a new science building for CS/Science at CSUSM | Pathways in Physics, Biological Sciences, Mathematics, Electrical Engineering, and Biotechnology | Cybersecurity program is new and you can get a master’s in that | Lots of professors who you can contact, many opportunities in clubs and hackathons | Internship opportunities which you can find through clubs, campus events, Google, get opportunities by emailing others | Avoid unpaid internships, apply even if you feel underqualified, ask faculty members for help with applications, go to the writing center on campus for help with application essays | Internship applications are very important | CSUSM Programs: Summer Scholars Program, Quantum Bridge Program, Chemistry and Biochemistry Targeted Learning Community Program | Two types of loans you can get for college: subsidized and unsubsidized loans | Subsidized loans do not accrue interest while you are in school, unsubsidized loans accrue interest during school and grace periods | After CSUSM, you can go to graduate school or other professional programs | . Reflection . I liked this session in particular because it was interesting to see how two students went from struggling in high school to doing so well in the real world because they found interest and opportunities in what they pursued in college. I learned a lot about new opportunities that I can pursue outside of school, which can help me both in high school and in the future when I’m trying to center in on what I’m interested in. Hearing from two students who have been through the entire process of finding new opportunities and struggling through them, but still reaching success at the end was encouraging and inspired me to continue pursuing what I enjoy, even if I struggle while doing it. The advice on new pathways to pursue that can connect to computer science was interesting and I’m looking more into a career path where I can apply my computer science background with knowledge I have from other classes. The mention of a cybersecurity program was something interesting for me and I want to look into CSUSM’s program for cybersecurity because it’s interesting to see how the extracurricular activities and classes I’ve taken at school can translate into a future career path for me, even if I don’t realize it right now. My biggest takeaway was to be open-minded and ready for new opportunities in the future because it will only help me as I start working in the future. .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/2023/03/28/csusmnotes.html",
            "relUrl": "/markdown/2023/03/28/csusmnotes.html",
            "date": " • Mar 28, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "2015 MCQ Exam Learnings + Reflection",
            "content": "Overall . Score: 36/39 = 92.3% . I scored 36/39 on this exam which I think is a good score and I know what specific areas I need to work on throughout the year. I think that I have a good understanding of most areas but need a bit more review with recursion and reviewing boolean/De Morgan’s Laws. These are areas where I plan to do more practice MCs and study more in the future. . Question 35 . . This would be the result if mid was calculated as (start + end + 1) / 2. The correct answer is 5. In the first iteration of the binary search, it will check the value at index (0 + 7) / 2 which is index 3. Since 8 is greater than data[3], start is assigned mid + 1 which is 4 and the process will repeat. In the second iteration of the while loop, it will check the value at index (4 + 7) / 2 which is index 5. Since data[5] is 8, 5 is returned. . Question 36 . . I chose 1,000 which is incorrect. The binary search eliminates half of the array during each iteration. This could be the number of elements left to examine after the first pass. . Question 37 . . I chose choice D which is incorrect. Choice I iterates from startIndex to the end of the array words as expected, but when it adds elements to result it adds the current word followed by a second word starting at the end of the array words. This will result in duplicate words being added to result. Choice III starts by adding the elements of words to temp in reverse order. The second loop starts at the beginning of temp (which was the end of words) and adds each subsequent element to result until it reaches the element that was at startIndex and is now at temp.length – startIndex resulting in result containing the required elements in reverse order. Instead, the correct answer is II and III. .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/collegeboard%20learning/2023/03/11/mcreflection.html",
            "relUrl": "/markdown/collegeboard%20learning/2023/03/11/mcreflection.html",
            "date": " • Mar 11, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "Methods and Control Structures FRQ",
            "content": "A music Web site keeps track of downloaded music. For each download, the site uses a DownloadInfo object to store a song&#39;s title and the number of times it has been downloaded. A partial declaration for the DownloadInfo class is shown below. public class DownloadInfo { /** Creates a new instance with the given unique title and sets the . number of times downloaded to 1. | @param title the unique title of the downloaded song / public DownloadInfo(String title) { / implementation not shown / } /** @return the title / public String getTitle() { / implementation not shown / } . /* Increment the number times downloaded by 1 / public void incrementTimesDownloaded() { / implementation not shown / } // There may be instance variables, constructors, and methods that are not shown. } . | . (a) Write the MusicDownloads method getDownloadInfo, which returns a reference to a DownloadInfo object if an object with a title that matches the parameter title exists in the downloadList. If no song in downloadList has a title that matches the parameter title, the method returns null. For example, suppose variable webMusicA refers to an instance of MusicDownloads and that the table below represents the contents of downloadList. The list contains three DownloadInfo objects. The object at position 0 has a title of &quot;Hey Jude&quot; and a download count of 5. The object at position 1 has a title of &quot;Soul Sister&quot; and a download count of 3. The object at position 2 has a title of &quot;Aqualung&quot; and a download count of 10. . public DownloadInfo getDownloadInfo(String title) { // for loop for all the different information in the download list for (DownloadInfo info : downloadList) { // if the title gotten is equal to the actual gotten, return the information of the music if (info.getTitle().equals(title)) { return info; } } // otherwise return null since nothing matched return null; } . Write the MusicDownloads method updateDownloads, which takes a list of song titles as a parameter. For each title in the list, the method updates downloadList, either by incrementing the download count if a DownloadInfo object with the same title exists, or by adding a new DownloadInfo object with that title and a download count of 1 to the end of the list. When a new DownloadInfo object is added to the end of the list, the order of the already existing entries in downloadList remains unchanged. For example, suppose variable webMusicB refers to an instance of MusicDownloads and that the table below represents the contents of the instance variable downloadList . public void updateDownloads(List&lt;String&gt; titles) { // uses an array list data type here for (String title : titles){ DownloadInfo foundInfo = getDownloadInfo(title); // if the found info is null from the previous part, add the information from the download info if (foundInfo == null) { downloadList.add(new DownloadInfo(title)); } // otherwise use it from found info else { foundInfo.incrementTimesDownloaded(); } } } . The FRQ answer relies on multiple data types, since we are either using strings or array lists to store multiple Strings. We know that we have to use strings since all of the music titles are in letters and we can store all of them in multiple strings. When using for loops, it&#39;s easier to iterate through each item in the array list using a for loop to then put into an if loop that can check for the required conditions. .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/collegeboard%20learning/2023/03/10/methodsfrq.html",
            "relUrl": "/jupyter/collegeboard%20learning/2023/03/10/methodsfrq.html",
            "date": " • Mar 10, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "Binary Addition Hacks",
            "content": "import java.util.Scanner; public class BinaryAddition { public static void main(String[] args) { Scanner input = new Scanner(System.in); System.out.print(&quot;Number 1: &quot;); int num1 = input.nextInt(); String bin1 = Integer.toBinaryString(num1); System.out.print(&quot;Number 2: &quot;); int num2 = input.nextInt(); String bin2 = Integer.toBinaryString(num2); String sum = binAddition(bin1, bin2); System.out.println(&quot; n&quot; + &quot;Sum is equal to &quot; + sum); } public static String binAddition(String binary1, String binary2) { StringBuilder sum = new StringBuilder(); int carry = 0; while (binary1.length() &lt; binary2.length()) { binary1 = &quot;0&quot; + binary1; } while (binary2.length() &lt; binary1.length()) { binary2 = &quot;0&quot; + binary2; } for (int i = binary1.length() - 1; i &gt;= 0; i--) { int add = Character.getNumericValue(binary1.charAt(i)) + Character.getNumericValue(binary2.charAt(i)) + carry; if (add == 0 || add == 1) { sum.append(add); carry = 0; } else if (add == 2) { sum.append(&quot;0&quot;); carry = 1; } else if (add == 3) { sum.append(&quot;1&quot;); carry = 1; } } if (carry == 1) { sum.append(&quot;1&quot;); } return sum.reverse().toString(); } } BinaryAddition.main(null); . Number 1: Number 2: Sum is equal to 10 .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/2023/03/06/binaryaddition.html",
            "relUrl": "/jupyter/2023/03/06/binaryaddition.html",
            "date": " • Mar 6, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "66 Question Exam Learnings + Reflection",
            "content": "Overall . Time: ~80 minutes . Score: 60/66 = 0.91/1 . I scored 60/66 on this exam which I think is a good score and I know what specific areas I need to work on throughout the year. I think that I have a good understanding of most areas but need a bit more review with recursion and reviewing boolean/De Morgan’s Laws. These are areas where I plan to do more practice MCs and study more in the future. . Question 5 . . I mixed up the and and the or at the beginning of the expression. I chose the option for a |   | b, when the answer should have been a &amp;&amp; b. It would’ve been more helpful to write out the question or check it once more to avoid these mistakes. | . Question 44 . . I chose answer C which was incorrect. This question was actually answer D since the variables n1 and n2 are not instance variables of the Points class, nor are they defined in the incrementPoints method. The instance variables num1 and num2 should have been used instead of n1 and n2. . Question 53 . . The correct answer is that the variable total should be initiated to 1 because the first code segment acts according to that. Thus, the second code segment would return values that are as if total is one less than expected since it is initialized incorrectly. . Question 54 . . I chose answer C which is incorrect since this method call returns false because the first character is lexicographically less than the second character of the string. The correct answer is D. . Question 63 . . I chose answer A which is incorrect. I guessed on this question because I was unsure. However, the correct answer is C since line 5 modifies an element of arr1 if that element is smaller than the corresponding element of minArray, which is NOT what is intended, since arr1 should remain unchanged. . Question 66 . . I chose answer D which is incorrect since the first code segment is iterating while j is less than 10, whereas the answer I chose is for when j is greater than or equal to 10, which is why it was incorrect. The correct answer was actually B since in the given for loop, j is initially 1 and increases by 2 repeatedly as long as it is less than 10. In this while loop, j is initially 1 and increases by 2 repeatedly while it is less than 10. Both code segments produce the output 13579. .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/collegeboard%20learning/2023/01/30/66question.html",
            "relUrl": "/markdown/collegeboard%20learning/2023/01/30/66question.html",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "52 Question Exam Learnings + Reflection",
            "content": "Overall . Time: 93 minutes Score: 47/52 . I scored 47/52 on this exam which I think is a good score and I know what specific areas I need to work on throughout the year. I think that I have a good understanding of most areas but need a bit more review with 2D arrays and array lists. These are areas where I plan to do more practice MCs and study more in the future. . Question 6 . . I chose the option for The row index of an element with the largest value in the two-dimensional array, but the correct answer was the one for the column index. The algorithm uses a for-each loop to traverse the rows, so the row index is not being stored and instead I realized that the column index is being stored in this question. | . Question 7 . . I chose answer C because I accounted for the question having a 1 at the end of each string, when there was actually a 0 at the end of each string. I should’ve been more careful in reading this question and chosen the option with a 0 at the end. . Question 39 . . I chose the answer that the code segment returns a list with fewer elements than intended because it fails to consider the last element of myList. However, this option is incorrect because the code segment returns a list with the right amount of elements intended because it has a for loop that continuously checks. The actual mistake is that the code segment skips some elements of myList because the indexes of all subsequent elements change by one when a list element is removed. . Question 40 . . I was unsure about this question and guessed on it. However, option 3 is the only correct answer because it checks the entire list and removes elements which satisfies the conditions of the code segment. . Question 48 . . I chose answer E for this question which was incorrect. The code segment uses an enhanced for loop to traverse the valueList array. The statement inside the loop calls the getNum method to access the num instance variable. Thus, option three cannot be correct. The code segment causes a compilation error because the getNum method must be called using the dot operator, not by passing the object reference as an argument. .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/collegeboard%20learning/2023/01/22/52questiontimetrial.html",
            "relUrl": "/markdown/collegeboard%20learning/2023/01/22/52questiontimetrial.html",
            "date": " • Jan 22, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "12/13 Event for CS/Business Notes",
            "content": "Notes . Kathyleen Beveridge: . Born in Vietnam, pursued a Finance degree from Santa Cruz | Did not have a traditional education. She lives by the mission statement: “My mission in life is not nearly to survive but to thrive and do so with passion.” | Her first job after college was as an investment banker at Wells Fargo. She later worked at HP, Qualcomm, and Thermo Fisher Scientist, where she wanted to make a global impact. | Her job is to make sure products make sense for the market before the company commercializes them | . Kris Porter: . Software engineer with experience in SRE, DevOps, and Infrastructure | UCLA for electrical engineering and did research for the Center for Embedded Network Sensors | In 2008, he finished graduate school but the stock market crash meant nobody was hiring | In 2010, he worked as a systems engineer at a startup | 2012: He worked on the streaming media infrastructure for NBC Universal | 2014: He joined Qualcomm and later moved to Twitter | His learnings: Continuous learning is very important &amp; experience in Machine Learning + Deep Learning | He has also taken courses in Python, Data structures, algorithms, and system designs | Some of his notable projects include the streaming media infrastructure for the 2012 Olympic Games and implementing GraphQL for a new datacenter deployment at Twitter | . General Notes . Kris doesn’t work at Twitter anymore | It’s good to have options in the case of layoffs like Twitter’s layoff | AI can be used to predict what customers are interested in and where they are | Some important skills to have are embracing opportunities and learnings | Thought process is very important in the real world | Coding helps in a variety of areas like ML, stocks, options trading, finance, etc. | . Reflection . I learned a lot about how to properly embrace challenges and prepare myself for a career in Computer Science. The biggest takeaway I had was to keep my options open and learn as much as I can before fully committing to a field because there is a lot of job insecurity but coding is a valuable skill to hold onto. Both of the speakers have moved through many jobs and have completely different backgrounds but both agreed that coding skills can be applied in many areas and in the end the most important factor is preserving learning and gaining experiences in the most valuable areas for future jobs. I know that there will be a lot of challenges, just like there are challenges in high school but I need to do my best to prepare myself for the roadblocks that are ahead in my life. .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/2022/12/13/csbusinesseventnotes.html",
            "relUrl": "/markdown/2022/12/13/csbusinesseventnotes.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "CollegeBoard Units 6 to 10",
            "content": "Unit Score . 6 - Arrays | 0.85/1 | . 7 - ArrayList | 0.95/1 | . 8 - 2D Array | 1/1 | . 9 - Inheritance | 0.95/1 | . 10 - Recursion | 1/1 | . Total Score: 4.75/5 . Notes . Unit 6 - Arrays . 6.1: how to declare arrays, mc about installation/access | 6.2: access an array using for/while, mc about ouput of code, FRQ about traversal | 6.3: enhanced loop structure | 6.4: using min/max, average of data, sifting array values | Array: type of data structure, arrays and array lists are different | Primitive data contains single variable type | Element is one value in an array, index is the position of the value in an array | Common errors are bound errors or uninitialized and unfilled arrays | Traversing an array is accessing values inside of it | You can use iteration or loop to traverse an array | You can use a basic for loop to see all the elements of the array | Use an enhanced for loop to visit all elements of the array | Developing algorithms --&gt; identifying max/min, finding sums of arrays, sorting arrays, array.length, array[i] | . Arrays HW . https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/2022/11/08/arrays.html . Unit 7 - ArrayList . size(); - Returns the number of elements in the list | add(obj); - Adds element at the end | add(index, object); - Adds element at specific index | remove(index); - Removes element from specific index | set(index, object); - Replaces element at index with new object | get(index); - Returns element at index | 2 ways to traverse arraylists --&gt; for loops and enhanced for loops | Import java.util.ArrayList | Declare and instantiate ArrayList with primitive data type | Use parenthese at the end of the constructor and element types with brackets | Use .size() instead of .length in arraylists | Important to safeguard and protect data | . ArrayList HW . https://github.com/rjawesome/CSASpringTri2/issues/10 . public int whereIsMyNumber(int magicNumber, int [] myNumbers) { for (int index = 0; index &lt; myNumbers.length; index++) //search through every single spot { if (myNumbers[index] == magicNumber) //do they match? if so return index { return index; } } return -1; // if searched through every single spot, indicate its not there } . Unit 8 - 2D Array . Array - data structure used to implement a collection of primitive or object reference data | Element is a single value in the array | Index is the position of the element in the array | Array length is the amount of elements in the array | . 2D Array HW . Submitted Google Form . // Declaring an array DataType[][] nameOf2DArray // Initializing an array DataType[][] nameOf2DArray = new DataType[r][c]; // The # of arrays in the array r = list.length // The # of elements in the inner arrays c = list[0].length . Unit 9 - Inheritance . Protected is an access modifier so that the attribute isn&#39;t affected by outside modifiers | To use the constructor of the superclass in subclass, we use the super keywords to use constructors that we can define in the super class | We can call a super class constructor with its attributes and then add assignments for other attributes | We can then extend the method to add something else into it | Overriding methods also exist to allow a subclass to provide a specific implementation of a method from a super class | Polymorphism means many forms --&gt; we can do one thing in many ways through inheritance | Overloading methods - Having two methods with the same name but different arguments and functionalities | toString Method: Prints out the attributes of an object, converts string object into a string | equals Method: Compares two strings, returns a boolean value of true if equal, otherwise returns false | Abstract class + methods and abstraction | Cannot create an object from it directly, must be created using a child class inheriting from the abstract class | Abstract methods originally only have their signature created and must be fully established in the child class definition | . Inheritance HW . https://horizon-ab.github.io/congenial-tribble/jupyter/college%20board/2022/12/13/unit9inheritance.html . // Utilized toString methods in all FRQs so far, here&#39;s an example from FRQ1 public String dayOfWeekToString() { return (&quot;{ &quot;month &quot;: &quot; + this.month + &quot;, &quot; + &quot; &quot;day &quot;: &quot; + this.day + &quot;, &quot; + &quot; &quot;year &quot;: &quot; + this.year + &quot;, &quot; + &quot; &quot;dayOfWeek &quot;: &quot; + this.dayOfWeek + &quot; }&quot;); } public String toString() { return dayOfWeekToString(); } . // Late binding: Car car = new TeslaModelS(&quot;Tesla&quot;, 1, 2, 3, &quot;string&quot;); . Unit 10 - Recursion . Recursive methods repeatedly call itself, base case and recursive call | After multiple calls the base case is reached and a value is returned | Base case avoids infinite recursion | Each call has different values that lead to reaching the base case | Recursive calls are made from top to bottom and recursive returns are passed from bottom to top | Recursion uses function calls and iteration uses for and while loops | Binary search algorithm --&gt; data needs to be sorted in order, keeps halving array until value is found, more efficient than linear search | Merge Sort --&gt; sorts ArrayList structures and divides the input array into two halves, calls itself for the two halves, and then merges the two sorted halves | merge() function is used | . Recursion HW . Submitted Google Form . // Example of recursion: import java.util.Scanner; //library to take user input int amt; //defines variables being used System.out.println(&quot;Amount of terms?&quot;); Scanner scanner = new Scanner(System.in); // takes in user input for amount of terms amt = scanner.nextInt(); class RecursionLoop { // recursively puts the term number back into the program and adds the term 2 less than the current to the term 1 less than the current static int fib(int fibamt) { if (fibamt &lt;= 1) { return fibamt; } else { return fib(fibamt - 1) + fib(fibamt - 2); } } public static void main(String args[]) { System.out.print(&quot;Here is the Fibonacci Sequence for &quot; + amt + &quot; terms:&quot;); for (int term = 0; term &lt; amt; term++) { // prints out the terms using for loop for each term calculated in the recursionloop System.out.print(&quot; n&quot; + fib(term)); } } } RecursionLoop.main(null); . Amount of terms? Here is the Fibonacci Sequence for 12 terms: 0 1 1 2 3 5 8 13 21 34 55 89 .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/collegeboard%20learning/2022/12/12/6to10notebook.html",
            "relUrl": "/jupyter/collegeboard%20learning/2022/12/12/6to10notebook.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Array List HW",
            "content": "Hack 1 . // HACK!!!! // Create an arrayList and use one of the cool methods for it import java.util.ArrayList; public class hack1 { public static void main (String[] args) { ArrayList&lt;Integer&gt; hacklist = new ArrayList&lt;Integer&gt;(); hacklist.add(1); hacklist.add(2); hacklist.add(3); for (int each : hacklist) { System.out.println(each); } } } hack1.main(null); . 1 2 3 . Hack 2 . import java.util.ArrayList; ArrayList&lt;String&gt; color = new ArrayList&lt;String&gt;(); color.add(&quot;red apple&quot;); color.add(&quot;green box&quot;); color.add(&quot;blue water&quot;); color.add(&quot;red panda&quot;); for (int i = 0; i&lt;color.size(); i++) { if (color.get(i).contains(&quot;red&quot;)) { color.remove(i); } } System.out.println(color); . [green box, blue water] . Hack 3 . ArrayList&lt;Integer&gt; num = new ArrayList&lt;Integer&gt;(); num.add(5); num.add(1); num.add(3); int sum = 0; for (int i : num){ sum += i; } System.out.println(sum); . 9 . Quizizz: . https://user-images.githubusercontent.com/45216129/205480582-a8484204-84cf-462b-a49c-37c73f486858.png .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/collegeboard%20learning/2022/12/03/arraylisthw.html",
            "relUrl": "/jupyter/collegeboard%20learning/2022/12/03/arraylisthw.html",
            "date": " • Dec 3, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "CollegeBoard Units 1 to 5",
            "content": "Unit Score . 1- Primitives | 1/1 | . 2 - Using Objects | 0.95/1 | . 3 - Boolean/If | 0.9/1 | . 4 - Iteration | My Presentation | . 5 - Writing Classes | 0.9/1 | . Unit 1 - Primitive Types: . Java has simple syntax | Automatic garbage collection | Multithreading | Boolean, int, double, char, float, long, others | Variable Naming: Lettrers/numbers, no special characters | addition, subtraction, division, modulus, multiplication | Compound operators | Both must be attached to a variable | Can cast variables to change the type --&gt; for example int to string | Also works for division: change from double to int type | In general classes with primitive types are known as wrapper classes | . Homework: https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/2022/10/16/primitives.html . // Casting for Division double answer = num / (double) denom; // We could use int instead if we wanted to round . // Example of Concentation (can join two strings): class Concentation { public static void main( String args[] ) { String one = &quot;Computer &quot;; String two = &quot;Science&quot;; one += two; System.out.println(one); } } Concentation.main(null); . Computer Science . // Example of Math Class: import java.lang.Math.*; class RandomGenerator { public static void main(String args[]) { double rand = Math.random(); System.out.println(&quot;Your number is &quot; + rand); } } RandomGenerator.main(null); . Your number is 0.4401313549911312 . Unit 2 - Using Objects . Java is an OOP language that compartmentalizes data and functions to bound them together | Classes are templates from which objects are created, objects are instances of classes | Syntax for creating a class is Painter myPainter = new Painter(); | Method declaration has 6 components: access modifier, return type, method name, parameter list, exception list, method body | Calling method: methodName(parameter1, parameter2); | Calling object&#39;s method: objectReference.methodName(parameter1, parameter2); | . Homework: https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/2022/10/16/primitives.html . Unit 3 - Boolean/If Statements . Most FRQs and MC have some if or if else statements | If statement is a conditional where something runs if it&#39;s true | If/else is similar to if but it has an option for something to happen if the if statement is not met | If else if allows you to create many options for something to occur | Switch statement adds efficiency and can switch the code using a control flow statement | Boolean expressions return true or false based on the condition | Logic Gates | DeMorgan&#39;s Law:(not(A and B)) is equal to (not A or not B) | (not(A or B)) is equal to (not A and not B) | (not(A and B)) is not equal to (not A and not B) | . Homework: https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/2022/10/19/booleanfrqs.html . // Compound boolean expression example: if (x &amp;&amp; y) { // has to ensure that two conditions are true System.out.println(&quot;true&quot;); } else { System.out.println(&quot;false&quot;); } . Truth Tables: . X Y Not X X &amp;&amp; Y X OR Y . False | False | True | False | False | . False | True | True | False | True | . True | False | False | False | True | . True | True | False | True | True | . // Comparing Numbers, Objects, Strings String object1 = &quot;a&quot;; String object2 = &quot;a&quot;; int num1 = 5; int num2 = 5; System.out.println(object1.equals(object2)); System.out.println(num1 == num2); . true true . Unit 4 - Iteration . I presented on this topic. . Slideshow Link: https://docs.google.com/presentation/d/12KvdRV2MIBkEkEN29gwN7ypVDmORXlK0ZlQ_KsLiLBE/edit?usp=sharing . For loop: for a certain condition, continue doing something | Enhanced for loop: is similar to for each, applies the condition for each individual part of the for loop | While Loop vs Do While Loop: While loop continues on while a condition is true, in other words until something stays true/it changes to not being true | Do while loops are similar but keep doing something and then check a condition after the task is completed | . | Nested Loops: Joining two sets by using two separate nested loops Contains a loop inside of a loop | . | . // For Loop: int n = 5; for (int i = 1; i &lt;= n; ++i) { System.out.println(i); } . 1 2 3 4 5 . // While Loop: int i = 1; while (i &lt;= 5) { System.out.println(i); i++; } . 1 2 3 4 5 . Unit 5 - Writing Classes . Essential aspect of OOP | Models real world objects | Object: state, attributes, behavior (instance of class) | Represented by instance in the program | Class defines abstract data type, object references, instance variables | Methods: behaviors or actions that apply to objects, constructors create the object | Main Method tests the class, intsance variables --&gt; attributes, fields, projects | Constructors are a special method for object instantiation, default constructor, multiple constructors per class | Comments can be added, preconditions for what must be true before code is implemented and postcondition about what should be true after the method is run | Accessor and mutator methods | 3 parts to writing methods: method definition, method signature, method body | Method return types: string, int, boolean, object type, void | Static modifier, this, access modifier | Three levels of scope: class level, method level, block level | Static methods are methods that belong to a class instead of an instance of a class - they can be called without creating an object of the class. | Class methods are methods that rely on the class, not on a specific object instance. | This keyword is used as a reference to an object within a class, examples shown below | . Homework: https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/2022/10/23/writingclasseshw.html . public class Main { int test = 5; } // Naming Conventions: Should have a Main Class and classes should be named appropriately and be capitalized to describe what the class is doing for people to easily understand . // Creating a Constructor: // Class public class Main { int constructorInt; // Class attribute // Constructor public Main() { constructorInt = 1; } } // No return because object is automatically given to the user when constructor is called . // Accessor Methods: public ResponseEntity&lt;Object&gt; postPerson(@RequestBody final Map&lt;String,Object&gt; map) throws NoSuchAlgorithmException { //check for existing person if (repository.findByEmail((String) map.get(&quot;email&quot;)).isPresent()) { return new ResponseEntity&lt;&gt;(&quot;Account with email has been created&quot;, HttpStatus.CREATED); } // Shows how we get multiple variables from a map that contains all of the user entered attributes // Can also use &quot;this.&quot; Person person = new Person(); person.setAge((int) map.get(&quot;age&quot;)); person.setName((String) map.get(&quot;name&quot;)); person.setEmail((String) map.get(&quot;email&quot;)); person.setGender((String) map.get(&quot;gender&quot;)); person.setHeightIn((int) map.get(&quot;heightIn&quot;)); person.setWeightLbs((int) map.get(&quot;weightLbs&quot;)); int activeSteps = (int) ((((double) person.getWeightLbs() / (person.getHeightIn() * person.getHeightIn())) * 703) * 500); person.setActiveSteps(activeSteps); } . // Mutator Methods: // The void return type is meant for when the function returns properly but it does not have a value to return so it returns void back. It is shown below along with all the setters // Access Modifiers: The public controls whether or not the properties and methods can be accessed outside of this class, which is true for this class since it is public. Other types include private which are not accessible and protected which can only be accessed within its own package and by a subclass. public ResponseEntity&lt;Object&gt; postPerson(@RequestBody final Map&lt;String,Object&gt; map) throws NoSuchAlgorithmException { //check for existing person if (repository.findByEmail((String) map.get(&quot;email&quot;)).isPresent()) { return new ResponseEntity&lt;&gt;(&quot;Account with email has been created&quot;, HttpStatus.CREATED); } // Sets all the attributes Person person = new Person(); person.setAge((int) map.get(&quot;age&quot;)); person.setName((String) map.get(&quot;name&quot;)); person.setEmail((String) map.get(&quot;email&quot;)); person.setGender((String) map.get(&quot;gender&quot;)); person.setHeightIn((int) map.get(&quot;heightIn&quot;)); person.setWeightLbs((int) map.get(&quot;weightLbs&quot;)); int activeSteps = (int) ((((double) person.getWeightLbs() / (person.getHeightIn() * person.getHeightIn())) * 703) * 500); person.setActiveSteps(activeSteps); } . // Main Method is shown below --&gt; it is used to test a class and is called when a class is run // In this example there is an all argument constructor and another example where it is separated for all the different attributes public static void main(String[] args) { Day day = new Day(); day.setCalories(100); day.setDay(10); day.setDistanceMiles(1.1); day.setId(null); day.setMonth(5); day.setSteps(10000); day.setYear(2022); System.out.println(day); Day day2 = new Day(null, 2022, 5, 10, 10000, 100, 1.1); System.out.println(day2); } .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/collegeboard%20learning/2022/11/29/1to5notebook.html",
            "relUrl": "/jupyter/collegeboard%20learning/2022/11/29/1to5notebook.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Arrays FRQ",
            "content": "// Write array methods for the Array Methods class below out of the options given above. public class ArrayMethods { private static int[] values = {1, 2, 3, 4, 5}; public void printElements(){ for(int a = 0; a &lt; values.length; a++){ System.out.println(values[a]); } } public void swapElements(){ int firstElement = values[0]; values[0] = values[values.length-1]; values[values.length-1] = firstElement; } public void changetoZero() { for(int a = 0; a &lt; values.length; a++){ if(values[a] % 2 == 0){ values[a] = 0; } } } public static boolean checkSort(int[] a) { for (int i = 0; i &lt; a.length - 1; i++) { if (a[i] &gt; a[i + 1]) { return false; } } return true; } public static void main(String[] args) { System.out.println(&quot;First and Last Element Swap: &quot;); ArrayMethods swapElements = new ArrayMethods(); swapElements.swapElements(); swapElements.printElements(); System.out.println(&quot;Replacing All Elements w/ Zero: &quot;); ArrayMethods changetoZero = new ArrayMethods(); changetoZero.changetoZero(); changetoZero.printElements(); System.out.println(&quot;Array In Increasing Order: &quot; + (checkSort(values))); } } ArrayMethods.main(null); . First and Last Element Swap: 5 2 3 4 1 Replacing All Elements w/ Zero: 5 0 3 0 1 Array In Increasing Order: false .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/2022/11/08/arrays.html",
            "relUrl": "/jupyter/2022/11/08/arrays.html",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Final Exam Learnings + Reflection",
            "content": "Overall . I scored 34/40 on this exam which I think is a good score and I know what specific areas I need to work on throughout the year. I think that I have a good understanding of most areas but need a bit more review with syntax, 2D arrays, and array lists. These are areas where I plan to do more practice MCs and study more in the future. . Question 10 . Consider the following instance variable and methods. You may assume that data has been initialized with length &gt; 0. The methods are intended to return the index of an array element equal to target, or -1 if no such element exists. . For which of the following test cases will the call seqSearchRec(5) always result in an error? I. data contains only one element. II. data does not contain the value 5. III. data contains the value 5 multiple times. . I chose I only which is incorrect since I will return the correct value of target and 0. The correct answer is II only since it will cause an ArrayIndexOutOfBoundsException since a negative value is entered into the array. | . Question 23 . Consider the following instance variable and method. . Assume that animals has been instantiated and initialized with the following contents. . What will the contents of animals be as a result of calling manipulate? . I chose answer E because I forgot to account for the fact that k is equal to the size of the array of animals minus 1, which if I had accounted for, I would have gotten the correct answer of B. In the future, I’ll make sure to read questions over again to make sure that I properly understand what the question is asking for especially on difficult questions. . Question 29 . Consider the following code segment. . for (int k = 1; k &lt;=100; k++) if ((k % 4) == 0) System.out.printn(k); . Which of the following code segments will produce the same output as the code segment above? . I chose answer D which is incorrect since it will only multiply by 4 which will print out 4, 16, 64. However, the correct answer is B since it will print 1, 5, 9, 13, etc which is the same as the initial code segment. . Question 30 . Consider the following method. . What value is returned as a result of the call scramble(“compiler”, 3)? . I choes answer B which was in correct; the correct answer is C. Answer B would be correct if the first call to substring was word.substring(howFar, word.length()). The reason why C is correct is because the class above doesn’t use the first character so the correct answer is “ilercom”, not “pilercom” . Question 39 . Consider the following recursive method. . public int recur(int n) { if (n &lt;= 10) return n * 2; else return recur(recur(n/3)); } . What value is returned as a result of the call recur(27)? . I chose answer E because I did not account for the fecond call of recur which is why I only returned the recur value for recur(27), not per what the method showed where it ran the code twice. The correct answer should’ve been 16. .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/collegeboard%20learning/2022/11/06/finalexamlearnings.html",
            "relUrl": "/markdown/collegeboard%20learning/2022/11/06/finalexamlearnings.html",
            "date": " • Nov 6, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Writing Classes FRQ",
            "content": "FRQ 2021 1a . int number = 0; public int scoreGuess(String guess) { for (int n = 0; n &lt;= secret.length() - guess.length(); i++;) { if (secret.substring(i,i + guess.length()).equals(guess)) { count++; } } return count * guess.length() * guess.length(); } . FRQ 2021 3a . public void addMembers(String[] names, int gradYear) { for (each : names) { PersonDetails newM = new MemberInfo (n, gradYear, true); memberList.add(newM); } } .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/2022/10/23/writingclasseshw.html",
            "relUrl": "/jupyter/2022/10/23/writingclasseshw.html",
            "date": " • Oct 23, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Boolean/If Statements FRQ",
            "content": "2009 FRQ 3b . public int getChargeStartTime(int chargeTime) { int startTime = 0; for (int i = 1; i &lt; 24; i++) { if (this.getChargingCost(i, chargeTime) this.getChargingCost(startTime, chargeTime)) { startTime = i; } } return startTime; } . 2017 FRQ 1b . int i = 0; public boolean isStrictlyIncreasing () { for (i &lt; digitList.size) { if (digitList.get(i).intValue() &gt;= digitList.get(i-1).intValue) return false; else { return true; } } } . 2019 FRQ 3b . public boolean isBalanced(ArrayList&lt;String&gt; delimiters) { int tally = 0; for(int i = 0; i ,delimiters.size(); i++) { if(delimiters.get(i).equals(openDel)) { tally ++; } else { tally--; } if(tally &lt; 0) { return false; } } } return tally == 0; } .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/2022/10/19/booleanfrqs.html",
            "relUrl": "/jupyter/2022/10/19/booleanfrqs.html",
            "date": " • Oct 19, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "WE STEM Event Notes",
            "content": "Notes . Children and adults are very reliable on the internet nowadays | Define features for Wifi Devices at Qualcomm | Important Tenets: Stay Curious, Lead from Any Chair | Build interest in the things you do and don’t ever give up on them | School days should be enjoyed | Have fun while at school and don’t lose what you enjoyed when you enter the corporate world | Opportunities don’t stay as long as we might want them to so we need to take advantage of what we get | Corportate world is difficult, we must take advantage and pursue new things | Mentors can be very helpful while we work | . Reflection . I learned valuable experiences for my goals when I pursue an internship or career in the future. I learned a valuable lesson that we should always stay curious and take opportunities to be leaders. More often than not we can always learn from others and gain information on approaches that other people take in parts of life so if we are constantly trying to learn from others and gain knowledge that others can share with us, we are bound to be successful. I also learned important values on taking charge and leading when we should step in. Opportunities come and go so it’s up to us to fully take advantage of them. .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/2022/10/18/westemlearnings.html",
            "relUrl": "/markdown/2022/10/18/westemlearnings.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "2006 Primitives FRQ",
            "content": "2006 FRQ #1 . public boolean conflictsWith (Appointment other) { return getTime().overlapsWith(other.getTime()); } . int x = 0; public void clearConflicts (Appointment appt) { while (x &lt; apptList.size()) { if (appt.conflictsWith((Appointment) (apptList.get(x)))) { apptList.remove(x); } else { x++; } } } . public boolean addAppt(Appointment appt, boolean emergency) { if (emergency) { clearConflicts(appt); } else { for (int i = 0; i &lt; apptList.size(); i++) { if (appt.conflictsWith((Appointment)apptList.get(i))) { return false; } } } return apptList.add(appt); . public double purchasePrice() { return (1 + taxRate) * getListPrice(); } . public int compareCustomer(Customer other) { int nameCompare = getName().compareTo(other.getName()); if (nameCompare != 0) { return nameCompare; } else { return getID() - other.getID(); } } . Goblins HW . public RandomGoblin extends goblin { public RandomGoblin () { this.hitPower = Math.random(); } } . import java.lang.Math; public class Duel { public static void attack(Goblin attackerGoblin, Goblin attackeeGoblin) { System.out.println(attackerGoblin.getName() + &quot; attacks &quot; + attackeeGoblin.getName() + &quot;!&quot;); if (Math.random() &lt; attackerGoblin.getHitChance()) { attackeeGoblin.takeDMG(attackerGoblin.getDMG()); System.out.println(attackerGoblin.getName() + &quot; hits!&quot;); System.out.println(attackeeGoblin.getName() + &quot; takes &quot; + attackerGoblin.getDMG() + &quot; damage&quot;); } else { System.out.println(attackerGoblin.getName() + &quot; misses...&quot;); } System.out.println(attackeeGoblin.getName() + &quot; HP: &quot; + attackeeGoblin.getHP()); System.out.println(); } public static void fight(Goblin goblin1, Goblin goblin2) { while (goblin1.isAlive() &amp;&amp; goblin2.isAlive()) { attack(goblin1, goblin2); if (!goblin1.isAlive()) { System.out.println(goblin1.getName() + &quot; has perished&quot;); break; } attack(goblin2, goblin1); if (!goblin2.isAlive()) { System.out.println(goblin2.getName() + &quot; has perished&quot;); break; } } } public static void main(String[] args) { Goblin goblin1 = new Goblin(); goblin1.setName(&quot;jeffrey&quot;); goblin1.setHP(12); goblin1.setDMG(2); public RandomGoblin () { this.hitPower = Math.random(); Goblin goblin2 = new Goblin(); goblin2.setName(&quot;Gunther the great&quot;); goblin2.setHP(4); goblin2.setDMG(1); goblin2.setHitChance(1); fight(goblin1, goblin2); } } Duel.main(null); .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/2022/10/16/primitives.html",
            "relUrl": "/jupyter/2022/10/16/primitives.html",
            "date": " • Oct 16, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Array List CB Learnings",
            "content": "Learnings . FRQ: https://secure-media.collegeboard.org/digitalServices/pdf/ap/ap17-comp-sci-a-q1.pdf . Java uses the notion of a list too. It defines the interface List which is in the java.util package. An interface lets you define a type based on what you want it to do, not how it does it. Several classes can implement the same interface and you can pick the one to use that works best in your situation. . List Methods on the Exam . int size() returns the number of elements in the list | boolean add(E obj) appends obj to the end of the list and returns true | void add(int index, E obj) moves any current objects at index or beyond to the right (to a higher index) and inserts obj at the index | E get(int index) returns the item in the list at the index | E set(int index, E obj) replaces the item at index with obj | E remove(int index) removes the item at the index and shifts remaining items to the left (to a lower index) | . Syntax and Learnings . It implements the List interface using an array and allows the underlying array to grow or shrink as needed. This also means that the ArrayList class contains the code for the methods defined in the List interface. . | There are actually two different add methods in the List interface. The add(obj) method adds the passed object to the end of the list. The add(index,obj) method adds the passed object at the passed index, but first moves over any existing values to higher indicies to make room for the new object. . | Declare an array using type[] name. . | .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/pbl/2022/10/09/arraylistlearnings.html",
            "relUrl": "/markdown/pbl/2022/10/09/arraylistlearnings.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Tri 1 Roles/Tasks",
            "content": "Team Roles . Aarav Arora: Scrum Master | Braeden Copley: DevOps | Tigran Arakelov: Frontend Developer | Vunsh Mehta; Backend Developer | . Tasks . Aarav: Work on API Implementation on Team Site and Fix Deployment for Team, Find APIs for Quizzes . | Braeden: Research APIs that can be used for the site . | Tigran and Vunsh: Start thinking about how to create the backend for the site and what we will need to store on it . | .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/pbl/2022/10/04/teamrolestasks.html",
            "relUrl": "/markdown/pbl/2022/10/04/teamrolestasks.html",
            "date": " • Oct 4, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "RapidAPI Notebook",
            "content": "Mr. M&#39;s Code . import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; //RapidAPI header https://rapidapi.com/spamakashrajtech/api/corona-virus-world-and-india-data HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot;)) .header(&quot;x-rapidapi-key&quot;, &quot;dec069b877msh0d9d0827664078cp1a18fajsn2afac35ae063&quot;) .header(&quot;x-rapidapi-host&quot;, &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); //RapidAPI request and response HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); //RapidAPI Body System.out.println(response.body()); . {&#34;countries_stat&#34;:[{&#34;country_name&#34;:&#34;USA&#34;,&#34;cases&#34;:&#34;82,649,779&#34;,&#34;deaths&#34;:&#34;1,018,316&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;80,434,925&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1,465&#34;,&#34;active_cases&#34;:&#34;1,196,538&#34;,&#34;total_cases_per_1m_population&#34;:&#34;247,080&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,044&#34;,&#34;total_tests&#34;:&#34;1,000,275,726&#34;,&#34;tests_per_1m_population&#34;:&#34;2,990,303&#34;},{&#34;country_name&#34;:&#34;India&#34;,&#34;cases&#34;:&#34;43,057,545&#34;,&#34;deaths&#34;:&#34;522,193&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;42,519,479&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;698&#34;,&#34;active_cases&#34;:&#34;15,873&#34;,&#34;total_cases_per_1m_population&#34;:&#34;30,657&#34;,&#34;deaths_per_1m_population&#34;:&#34;372&#34;,&#34;total_tests&#34;:&#34;834,717,702&#34;,&#34;tests_per_1m_population&#34;:&#34;594,319&#34;}} . import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; import java.io.IOException; class Stocks { public static void main(String[] args) throws IOException, InterruptedException { HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://latest-stock-price.p.rapidapi.com/price?Indices=NIFTY%20SMLCAP%2050&quot;)) .header(&quot;X-RapidAPI-Key&quot;, &quot;8a72a745admsh4f6260fd91442a9p17d011jsn6dc5cd0e2605&quot;) .header(&quot;X-RapidAPI-Host&quot;, &quot;latest-stock-price.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); System.out.println(response.body()); } } Stocks.main(null); . [{&#34;symbol&#34;:&#34;NIFTY SMLCAP 50&#34;,&#34;identifier&#34;:&#34;NIFTY SMLCAP 50&#34;,&#34;open&#34;:4307.65,&#34;dayHigh&#34;:4313,&#34;dayLow&#34;:4285.45,&#34;lastPrice&#34;:4300.5,&#34;previousClose&#34;:4231.9,&#34;change&#34;:68.60000000000036,&#34;pChange&#34;:1.62,&#34;yearHigh&#34;:5889.45,&#34;yearLow&#34;:3588.3,&#34;totalTradedVolume&#34;:29306232,&#34;totalTradedValue&#34;:6699662844.91,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:28:45&#34;,&#34;perChange365d&#34;:-20.56,&#34;perChange30d&#34;:-3.52},{&#34;symbol&#34;:&#34;ANGELONE&#34;,&#34;identifier&#34;:&#34;ANGELONEEQN&#34;,&#34;open&#34;:1442,&#34;dayHigh&#34;:1475,&#34;dayLow&#34;:1430.75,&#34;lastPrice&#34;:1456,&#34;previousClose&#34;:1363.75,&#34;change&#34;:92.25,&#34;pChange&#34;:6.76,&#34;totalTradedVolume&#34;:581429,&#34;totalTradedValue&#34;:845798952.01,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:14&#34;,&#34;yearHigh&#34;:2022,&#34;yearLow&#34;:990.5,&#34;perChange365d&#34;:&#34;-&#34;,&#34;perChange30d&#34;:2.76},{&#34;symbol&#34;:&#34;BDL&#34;,&#34;identifier&#34;:&#34;BDLEQN&#34;,&#34;open&#34;:884.2,&#34;dayHigh&#34;:921.9,&#34;dayLow&#34;:882,&#34;lastPrice&#34;:915.2,&#34;previousClose&#34;:875.9,&#34;change&#34;:39.3,&#34;pChange&#34;:4.49,&#34;totalTradedVolume&#34;:607611,&#34;totalTradedValue&#34;:548927929.62,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:15&#34;,&#34;yearHigh&#34;:979.1,&#34;yearLow&#34;:368.15,&#34;perChange365d&#34;:131.9,&#34;perChange30d&#34;:4.9},{&#34;symbol&#34;:&#34;IDFC&#34;,&#34;identifier&#34;:&#34;IDFCEQN&#34;,&#34;open&#34;:67.4,&#34;dayHigh&#34;:68.9,&#34;dayLow&#34;:66.8,&#34;lastPrice&#34;:68.25,&#34;previousClose&#34;:65.65,&#34;change&#34;:2.6,&#34;pChange&#34;:3.96,&#34;totalTradedVolume&#34;:3173013,&#34;totalTradedValue&#34;:216621597.51,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:15&#34;,&#34;yearHigh&#34;:71.7,&#34;yearLow&#34;:42.2,&#34;perChange365d&#34;:22.83,&#34;perChange30d&#34;:-3.46},{&#34;symbol&#34;:&#34;ZENSARTECH&#34;,&#34;identifier&#34;:&#34;ZENSARTECHEQN&#34;,&#34;open&#34;:213.9,&#34;dayHigh&#34;:218.5,&#34;dayLow&#34;:211.9,&#34;lastPrice&#34;:217.85,&#34;previousClose&#34;:209.85,&#34;change&#34;:8,&#34;pChange&#34;:3.81,&#34;totalTradedVolume&#34;:367118,&#34;totalTradedValue&#34;:79011135.96,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:13&#34;,&#34;yearHigh&#34;:539,&#34;yearLow&#34;:208,&#34;perChange365d&#34;:-56.11,&#34;perChange30d&#34;:-8.88},{&#34;symbol&#34;:&#34;BSOFT&#34;,&#34;identifier&#34;:&#34;BSOFTEQN&#34;,&#34;open&#34;:284.9,&#34;dayHigh&#34;:290.85,&#34;dayLow&#34;:281.4,&#34;lastPrice&#34;:289.45,&#34;previousClose&#34;:278.9,&#34;change&#34;:10.55,&#34;pChange&#34;:3.78,&#34;totalTradedVolume&#34;:1341743,&#34;totalTradedValue&#34;:385402259.32,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:15&#34;,&#34;yearHigh&#34;:585.85,&#34;yearLow&#34;:277.15,&#34;perChange365d&#34;:-29.79,&#34;perChange30d&#34;:-13.1},{&#34;symbol&#34;:&#34;MAHABANK&#34;,&#34;identifier&#34;:&#34;MAHABANKEQN&#34;,&#34;open&#34;:18,&#34;dayHigh&#34;:18.3,&#34;dayLow&#34;:17.95,&#34;lastPrice&#34;:18.2,&#34;previousClose&#34;:17.55,&#34;change&#34;:0.65,&#34;pChange&#34;:3.7,&#34;totalTradedVolume&#34;:1650680,&#34;totalTradedValue&#34;:29877308.000000004,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:10&#34;,&#34;yearHigh&#34;:22.85,&#34;yearLow&#34;:15,&#34;perChange365d&#34;:-12.25,&#34;perChange30d&#34;:-2.23},{&#34;symbol&#34;:&#34;REDINGTON&#34;,&#34;identifier&#34;:&#34;REDINGTONEQN&#34;,&#34;open&#34;:143.75,&#34;dayHigh&#34;:146.5,&#34;dayLow&#34;:142.1,&#34;lastPrice&#34;:145,&#34;previousClose&#34;:141.1,&#34;change&#34;:3.9,&#34;pChange&#34;:2.76,&#34;totalTradedVolume&#34;:722677,&#34;totalTradedValue&#34;:104737577.61,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:15&#34;,&#34;yearHigh&#34;:179.2,&#34;yearLow&#34;:109.4,&#34;perChange365d&#34;:-2.42,&#34;perChange30d&#34;:-4.31},{&#34;symbol&#34;:&#34;LATENTVIEW&#34;,&#34;identifier&#34;:&#34;LATENTVIEWEQN&#34;,&#34;open&#34;:359,&#34;dayHigh&#34;:362.9,&#34;dayLow&#34;:357.3,&#34;lastPrice&#34;:361.55,&#34;previousClose&#34;:352.1,&#34;change&#34;:9.45,&#34;pChange&#34;:2.68,&#34;totalTradedVolume&#34;:76942,&#34;totalTradedValue&#34;:27696811.740000002,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:15&#34;,&#34;yearHigh&#34;:754.9,&#34;yearLow&#34;:305.25,&#34;perChange365d&#34;:&#34;-&#34;,&#34;perChange30d&#34;:-9.38},{&#34;symbol&#34;:&#34;CANFINHOME&#34;,&#34;identifier&#34;:&#34;CANFINHOMEEQN&#34;,&#34;open&#34;:488,&#34;dayHigh&#34;:499.25,&#34;dayLow&#34;:487.55,&#34;lastPrice&#34;:493.7,&#34;previousClose&#34;:480.9,&#34;change&#34;:12.8,&#34;pChange&#34;:2.66,&#34;totalTradedVolume&#34;:975825,&#34;totalTradedValue&#34;:483296847.75,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:15&#34;,&#34;yearHigh&#34;:722,&#34;yearLow&#34;:406.65,&#34;perChange365d&#34;:-28.35,&#34;perChange30d&#34;:-24.37},{&#34;symbol&#34;:&#34;METROBRAND&#34;,&#34;identifier&#34;:&#34;METROBRANDEQN&#34;,&#34;open&#34;:955.5,&#34;dayHigh&#34;:969.85,&#34;dayLow&#34;:948,&#34;lastPrice&#34;:959,&#34;previousClose&#34;:934.75,&#34;change&#34;:24.25,&#34;pChange&#34;:2.59,&#34;totalTradedVolume&#34;:167180,&#34;totalTradedValue&#34;:160305558.4,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:15&#34;,&#34;yearHigh&#34;:969.85,&#34;yearLow&#34;:426,&#34;perChange365d&#34;:&#34;-&#34;,&#34;perChange30d&#34;:17.61},{&#34;symbol&#34;:&#34;HINDCOPPER&#34;,&#34;identifier&#34;:&#34;HINDCOPPEREQN&#34;,&#34;open&#34;:107,&#34;dayHigh&#34;:108.45,&#34;dayLow&#34;:106.75,&#34;lastPrice&#34;:107.25,&#34;previousClose&#34;:104.6,&#34;change&#34;:2.65,&#34;pChange&#34;:2.53,&#34;totalTradedVolume&#34;:639894,&#34;totalTradedValue&#34;:68763009.24,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:13&#34;,&#34;yearHigh&#34;:159.4,&#34;yearLow&#34;:81.2,&#34;perChange365d&#34;:-4.78,&#34;perChange30d&#34;:-9.32},{&#34;symbol&#34;:&#34;INTELLECT&#34;,&#34;identifier&#34;:&#34;INTELLECTEQN&#34;,&#34;open&#34;:518,&#34;dayHigh&#34;:528.95,&#34;dayLow&#34;:516.05,&#34;lastPrice&#34;:524.45,&#34;previousClose&#34;:511.7,&#34;change&#34;:12.75,&#34;pChange&#34;:2.49,&#34;totalTradedVolume&#34;:120531,&#34;totalTradedValue&#34;:63011196.18,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:15&#34;,&#34;yearHigh&#34;:986.65,&#34;yearLow&#34;:505.5,&#34;perChange365d&#34;:-26.81,&#34;perChange30d&#34;:-14.43},{&#34;symbol&#34;:&#34;BALAMINES&#34;,&#34;identifier&#34;:&#34;BALAMINESEQN&#34;,&#34;open&#34;:3175,&#34;dayHigh&#34;:3223.3,&#34;dayLow&#34;:3171.15,&#34;lastPrice&#34;:3193.7,&#34;previousClose&#34;:3120,&#34;change&#34;:73.7,&#34;pChange&#34;:2.36,&#34;totalTradedVolume&#34;:21266,&#34;totalTradedValue&#34;:67862995.9,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:10&#34;,&#34;yearHigh&#34;:4805,&#34;yearLow&#34;:2692.75,&#34;perChange365d&#34;:-31.43,&#34;perChange30d&#34;:-9.01},{&#34;symbol&#34;:&#34;JBCHEPHARM&#34;,&#34;identifier&#34;:&#34;JBCHEPHARMEQN&#34;,&#34;open&#34;:1975.3,&#34;dayHigh&#34;:2020,&#34;dayLow&#34;:1975.3,&#34;lastPrice&#34;:2009.95,&#34;previousClose&#34;:1965,&#34;change&#34;:44.95,&#34;pChange&#34;:2.29,&#34;totalTradedVolume&#34;:22247,&#34;totalTradedValue&#34;:44535156.949999996,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:14&#34;,&#34;yearHigh&#34;:2048,&#34;yearLow&#34;:1342.2,&#34;perChange365d&#34;:4.18,&#34;perChange30d&#34;:9.52},{&#34;symbol&#34;:&#34;STLTECH&#34;,&#34;identifier&#34;:&#34;STLTECHEQN&#34;,&#34;open&#34;:166.9,&#34;dayHigh&#34;:168.15,&#34;dayLow&#34;:165.15,&#34;lastPrice&#34;:167.6,&#34;previousClose&#34;:164.2,&#34;change&#34;:3.4,&#34;pChange&#34;:2.07,&#34;totalTradedVolume&#34;:204080,&#34;totalTradedValue&#34;:34116053.599999994,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:14&#34;,&#34;yearHigh&#34;:317.4,&#34;yearLow&#34;:128.6,&#34;perChange365d&#34;:-41.75,&#34;perChange30d&#34;:-3.1},{&#34;symbol&#34;:&#34;MANAPPURAM&#34;,&#34;identifier&#34;:&#34;MANAPPURAMEQN&#34;,&#34;open&#34;:98.15,&#34;dayHigh&#34;:98.15,&#34;dayLow&#34;:97.2,&#34;lastPrice&#34;:97.7,&#34;previousClose&#34;:95.75,&#34;change&#34;:1.95,&#34;pChange&#34;:2.04,&#34;totalTradedVolume&#34;:1027055,&#34;totalTradedValue&#34;:100343273.5,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:13&#34;,&#34;yearHigh&#34;:224.5,&#34;yearLow&#34;:81.5,&#34;perChange365d&#34;:-46.67,&#34;perChange30d&#34;:-7.08},{&#34;symbol&#34;:&#34;FSL&#34;,&#34;identifier&#34;:&#34;FSLEQN&#34;,&#34;open&#34;:105.25,&#34;dayHigh&#34;:105.8,&#34;dayLow&#34;:104.15,&#34;lastPrice&#34;:105.35,&#34;previousClose&#34;:103.25,&#34;change&#34;:2.1,&#34;pChange&#34;:2.03,&#34;totalTradedVolume&#34;:581235,&#34;totalTradedValue&#34;:61023862.65,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:13&#34;,&#34;yearHigh&#34;:222.7,&#34;yearLow&#34;:93,&#34;perChange365d&#34;:-47.09,&#34;perChange30d&#34;:-1.43},{&#34;symbol&#34;:&#34;CAMPUS&#34;,&#34;identifier&#34;:&#34;CAMPUSEQN&#34;,&#34;open&#34;:582.95,&#34;dayHigh&#34;:585.2,&#34;dayLow&#34;:579.05,&#34;lastPrice&#34;:582.5,&#34;previousClose&#34;:571.55,&#34;change&#34;:10.95,&#34;pChange&#34;:1.92,&#34;totalTradedVolume&#34;:129013,&#34;totalTradedValue&#34;:75057183.14,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:15&#34;,&#34;yearHigh&#34;:617,&#34;yearLow&#34;:297.1,&#34;perChange365d&#34;:&#34;-&#34;,&#34;perChange30d&#34;:15.52},{&#34;symbol&#34;:&#34;RENUKA&#34;,&#34;identifier&#34;:&#34;RENUKAEQN&#34;,&#34;open&#34;:58.1,&#34;dayHigh&#34;:58.6,&#34;dayLow&#34;:57.4,&#34;lastPrice&#34;:58,&#34;previousClose&#34;:56.95,&#34;change&#34;:1.05,&#34;pChange&#34;:1.84,&#34;totalTradedVolume&#34;:6174947,&#34;totalTradedValue&#34;:357899928.12,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:14&#34;,&#34;yearHigh&#34;:63.2,&#34;yearLow&#34;:24.4,&#34;perChange365d&#34;:&#34;-&#34;,&#34;perChange30d&#34;:19.39},{&#34;symbol&#34;:&#34;AMARAJABAT&#34;,&#34;identifier&#34;:&#34;AMARAJABATEQN&#34;,&#34;open&#34;:492,&#34;dayHigh&#34;:492,&#34;dayLow&#34;:485.15,&#34;lastPrice&#34;:490.15,&#34;previousClose&#34;:481.3,&#34;change&#34;:8.85,&#34;pChange&#34;:1.84,&#34;totalTradedVolume&#34;:91202,&#34;totalTradedValue&#34;:44629698.7,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:14&#34;,&#34;yearHigh&#34;:781.6,&#34;yearLow&#34;:438.05,&#34;perChange365d&#34;:-37.23,&#34;perChange30d&#34;:-5.64},{&#34;symbol&#34;:&#34;CHAMBLFERT&#34;,&#34;identifier&#34;:&#34;CHAMBLFERTEQN&#34;,&#34;open&#34;:318,&#34;dayHigh&#34;:319.85,&#34;dayLow&#34;:316.35,&#34;lastPrice&#34;:318.1,&#34;previousClose&#34;:312.6,&#34;change&#34;:5.5,&#34;pChange&#34;:1.76,&#34;totalTradedVolume&#34;:185401,&#34;totalTradedValue&#34;:58883357.6,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:14&#34;,&#34;yearHigh&#34;:516,&#34;yearLow&#34;:260.8,&#34;perChange365d&#34;:-8.02,&#34;perChange30d&#34;:-9.6},{&#34;symbol&#34;:&#34;TV18BRDCST&#34;,&#34;identifier&#34;:&#34;TV18BRDCSTEQN&#34;,&#34;open&#34;:38.2,&#34;dayHigh&#34;:38.4,&#34;dayLow&#34;:38,&#34;lastPrice&#34;:38.25,&#34;previousClose&#34;:37.6,&#34;change&#34;:0.65,&#34;pChange&#34;:1.73,&#34;totalTradedVolume&#34;:971096,&#34;totalTradedValue&#34;:37086156.239999995,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:12&#34;,&#34;yearHigh&#34;:82.6,&#34;yearLow&#34;:34.9,&#34;perChange365d&#34;:-9.51,&#34;perChange30d&#34;:-9.51},{&#34;symbol&#34;:&#34;JUBLINGREA&#34;,&#34;identifier&#34;:&#34;JUBLINGREAEQN&#34;,&#34;open&#34;:517.9,&#34;dayHigh&#34;:526.7,&#34;dayLow&#34;:513.45,&#34;lastPrice&#34;:518.7,&#34;previousClose&#34;:510.2,&#34;change&#34;:8.5,&#34;pChange&#34;:1.67,&#34;totalTradedVolume&#34;:227217,&#34;totalTradedValue&#34;:118114213.11000001,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:14&#34;,&#34;yearHigh&#34;:838.75,&#34;yearLow&#34;:401.2,&#34;perChange365d&#34;:-31.79,&#34;perChange30d&#34;:8.85},{&#34;symbol&#34;:&#34;BSE&#34;,&#34;identifier&#34;:&#34;BSEEQN&#34;,&#34;open&#34;:612.45,&#34;dayHigh&#34;:614,&#34;dayLow&#34;:608,&#34;lastPrice&#34;:611.65,&#34;previousClose&#34;:602.05,&#34;change&#34;:9.6,&#34;pChange&#34;:1.59,&#34;totalTradedVolume&#34;:135540,&#34;totalTradedValue&#34;:82714640.4,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:14&#34;,&#34;yearHigh&#34;:1046.67,&#34;yearLow&#34;:406.67,&#34;perChange365d&#34;:-50.61,&#34;perChange30d&#34;:-6.92},{&#34;symbol&#34;:&#34;WELSPUNIND&#34;,&#34;identifier&#34;:&#34;WELSPUNINDEQN&#34;,&#34;open&#34;:74.4,&#34;dayHigh&#34;:74.5,&#34;dayLow&#34;:73.5,&#34;lastPrice&#34;:74.05,&#34;previousClose&#34;:72.9,&#34;change&#34;:1.15,&#34;pChange&#34;:1.58,&#34;totalTradedVolume&#34;:126607,&#34;totalTradedValue&#34;:9366385.860000001,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:11&#34;,&#34;yearHigh&#34;:170.7,&#34;yearLow&#34;:62.2,&#34;perChange365d&#34;:-55.28,&#34;perChange30d&#34;:-1.88},{&#34;symbol&#34;:&#34;ANURAS&#34;,&#34;identifier&#34;:&#34;ANURASEQN&#34;,&#34;open&#34;:745,&#34;dayHigh&#34;:745,&#34;dayLow&#34;:733.1,&#34;lastPrice&#34;:738.25,&#34;previousClose&#34;:726.9,&#34;change&#34;:11.35,&#34;pChange&#34;:1.56,&#34;totalTradedVolume&#34;:20314,&#34;totalTradedValue&#34;:14984825.24,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:28:59&#34;,&#34;yearHigh&#34;:1107.55,&#34;yearLow&#34;:546.75,&#34;perChange365d&#34;:-6.97,&#34;perChange30d&#34;:-4.9},{&#34;symbol&#34;:&#34;CDSL&#34;,&#34;identifier&#34;:&#34;CDSLEQN&#34;,&#34;open&#34;:1253,&#34;dayHigh&#34;:1259.75,&#34;dayLow&#34;:1242.85,&#34;lastPrice&#34;:1247.55,&#34;previousClose&#34;:1229.55,&#34;change&#34;:18,&#34;pChange&#34;:1.46,&#34;totalTradedVolume&#34;:77728,&#34;totalTradedValue&#34;:97049626.24,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:09&#34;,&#34;yearHigh&#34;:1734.4,&#34;yearLow&#34;:1015,&#34;perChange365d&#34;:&#34;-&#34;,&#34;perChange30d&#34;:-1.52},{&#34;symbol&#34;:&#34;HFCL&#34;,&#34;identifier&#34;:&#34;HFCLEQN&#34;,&#34;open&#34;:75.5,&#34;dayHigh&#34;:75.9,&#34;dayLow&#34;:74.55,&#34;lastPrice&#34;:74.9,&#34;previousClose&#34;:73.85,&#34;change&#34;:1.05,&#34;pChange&#34;:1.42,&#34;totalTradedVolume&#34;:2253808,&#34;totalTradedValue&#34;:169621590.08,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:14&#34;,&#34;yearHigh&#34;:101.35,&#34;yearLow&#34;:51.55,&#34;perChange365d&#34;:&#34;-&#34;,&#34;perChange30d&#34;:-3.34},{&#34;symbol&#34;:&#34;ALOKINDS&#34;,&#34;identifier&#34;:&#34;ALOKINDSBEN&#34;,&#34;open&#34;:18.15,&#34;dayHigh&#34;:18.25,&#34;dayLow&#34;:17.85,&#34;lastPrice&#34;:18.2,&#34;previousClose&#34;:17.95,&#34;change&#34;:0.25,&#34;pChange&#34;:1.39,&#34;totalTradedVolume&#34;:210379,&#34;totalTradedValue&#34;:3816275.06,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:12&#34;,&#34;yearHigh&#34;:35.8,&#34;yearLow&#34;:17.75,&#34;perChange365d&#34;:&#34;-&#34;,&#34;perChange30d&#34;:-8.65},{&#34;symbol&#34;:&#34;BIRLACORPN&#34;,&#34;identifier&#34;:&#34;BIRLACORPNEQN&#34;,&#34;open&#34;:948.8,&#34;dayHigh&#34;:950.05,&#34;dayLow&#34;:941,&#34;lastPrice&#34;:947.9,&#34;previousClose&#34;:934.9,&#34;change&#34;:13,&#34;pChange&#34;:1.39,&#34;totalTradedVolume&#34;:16760,&#34;totalTradedValue&#34;:15859988,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:08&#34;,&#34;yearHigh&#34;:1650,&#34;yearLow&#34;:823,&#34;perChange365d&#34;:-32.62,&#34;perChange30d&#34;:-3.5},{&#34;symbol&#34;:&#34;KPITTECH&#34;,&#34;identifier&#34;:&#34;KPITTECHEQN&#34;,&#34;open&#34;:669.7,&#34;dayHigh&#34;:672.7,&#34;dayLow&#34;:663.1,&#34;lastPrice&#34;:666.7,&#34;previousClose&#34;:658.25,&#34;change&#34;:8.45,&#34;pChange&#34;:1.28,&#34;totalTradedVolume&#34;:462866,&#34;totalTradedValue&#34;:309106543.46,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:15&#34;,&#34;yearHigh&#34;:801,&#34;yearLow&#34;:300.25,&#34;perChange365d&#34;:94.72,&#34;perChange30d&#34;:16.67},{&#34;symbol&#34;:&#34;GRAPHITE&#34;,&#34;identifier&#34;:&#34;GRAPHITEEQN&#34;,&#34;open&#34;:365,&#34;dayHigh&#34;:367.7,&#34;dayLow&#34;:363.15,&#34;lastPrice&#34;:363.5,&#34;previousClose&#34;:359.25,&#34;change&#34;:4.25,&#34;pChange&#34;:1.18,&#34;totalTradedVolume&#34;:58059,&#34;totalTradedValue&#34;:21166569.63,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:14&#34;,&#34;yearHigh&#34;:634.35,&#34;yearLow&#34;:348.25,&#34;perChange365d&#34;:-40.04,&#34;perChange30d&#34;:-11.58},{&#34;symbol&#34;:&#34;LXCHEM&#34;,&#34;identifier&#34;:&#34;LXCHEMEQN&#34;,&#34;open&#34;:346.35,&#34;dayHigh&#34;:348,&#34;dayLow&#34;:342.6,&#34;lastPrice&#34;:343.1,&#34;previousClose&#34;:339.25,&#34;change&#34;:3.85,&#34;pChange&#34;:1.13,&#34;totalTradedVolume&#34;:147650,&#34;totalTradedValue&#34;:50855089.5,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:06&#34;,&#34;yearHigh&#34;:597.8,&#34;yearLow&#34;:274.2,&#34;perChange365d&#34;:-37.44,&#34;perChange30d&#34;:3.78},{&#34;symbol&#34;:&#34;GNFC&#34;,&#34;identifier&#34;:&#34;GNFCEQN&#34;,&#34;open&#34;:647.65,&#34;dayHigh&#34;:649.9,&#34;dayLow&#34;:639.35,&#34;lastPrice&#34;:642.6,&#34;previousClose&#34;:635.6,&#34;change&#34;:7,&#34;pChange&#34;:1.1,&#34;totalTradedVolume&#34;:324998,&#34;totalTradedValue&#34;:209474210.92,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:14&#34;,&#34;yearHigh&#34;:912,&#34;yearLow&#34;:390.1,&#34;perChange365d&#34;:49.48,&#34;perChange30d&#34;:-14.14},{&#34;symbol&#34;:&#34;CESC&#34;,&#34;identifier&#34;:&#34;CESCEQN&#34;,&#34;open&#34;:79,&#34;dayHigh&#34;:79.4,&#34;dayLow&#34;:78.15,&#34;lastPrice&#34;:78.8,&#34;previousClose&#34;:78,&#34;change&#34;:0.8,&#34;pChange&#34;:1.03,&#34;totalTradedVolume&#34;:335182,&#34;totalTradedValue&#34;:26372119.76,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:14&#34;,&#34;yearHigh&#34;:102.45,&#34;yearLow&#34;:68,&#34;perChange365d&#34;:-14.66,&#34;perChange30d&#34;:-2.5},{&#34;symbol&#34;:&#34;BALRAMCHIN&#34;,&#34;identifier&#34;:&#34;BALRAMCHINEQN&#34;,&#34;open&#34;:350,&#34;dayHigh&#34;:350.95,&#34;dayLow&#34;:347.4,&#34;lastPrice&#34;:348,&#34;previousClose&#34;:344.7,&#34;change&#34;:3.3,&#34;pChange&#34;:0.96,&#34;totalTradedVolume&#34;:169132,&#34;totalTradedValue&#34;:59013537.440000005,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:13&#34;,&#34;yearHigh&#34;:525.9,&#34;yearLow&#34;:297.6,&#34;perChange365d&#34;:-5.88,&#34;perChange30d&#34;:-4.53},{&#34;symbol&#34;:&#34;INDIGOPNTS&#34;,&#34;identifier&#34;:&#34;INDIGOPNTSEQN&#34;,&#34;open&#34;:1502.1,&#34;dayHigh&#34;:1514.9,&#34;dayLow&#34;:1497.15,&#34;lastPrice&#34;:1503,&#34;previousClose&#34;:1490.95,&#34;change&#34;:12.05,&#34;pChange&#34;:0.81,&#34;totalTradedVolume&#34;:2622,&#34;totalTradedValue&#34;:3942675.18,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:14&#34;,&#34;yearHigh&#34;:2589.9,&#34;yearLow&#34;:1353.6,&#34;perChange365d&#34;:-40.98,&#34;perChange30d&#34;:-6.21},{&#34;symbol&#34;:&#34;UTIAMC&#34;,&#34;identifier&#34;:&#34;UTIAMCEQN&#34;,&#34;open&#34;:720.5,&#34;dayHigh&#34;:723,&#34;dayLow&#34;:712.1,&#34;lastPrice&#34;:716.05,&#34;previousClose&#34;:710.7,&#34;change&#34;:5.35,&#34;pChange&#34;:0.75,&#34;totalTradedVolume&#34;:9610,&#34;totalTradedValue&#34;:6893925.7,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:13&#34;,&#34;yearHigh&#34;:1165.85,&#34;yearLow&#34;:595,&#34;perChange365d&#34;:-32.33,&#34;perChange30d&#34;:-16.6},{&#34;symbol&#34;:&#34;APOLLOTYRE&#34;,&#34;identifier&#34;:&#34;APOLLOTYREEQN&#34;,&#34;open&#34;:268.8,&#34;dayHigh&#34;:271.65,&#34;dayLow&#34;:264.55,&#34;lastPrice&#34;:265.9,&#34;previousClose&#34;:263.95,&#34;change&#34;:1.95,&#34;pChange&#34;:0.74,&#34;totalTradedVolume&#34;:3375912,&#34;totalTradedValue&#34;:905487116.6400001,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:15&#34;,&#34;yearHigh&#34;:303.45,&#34;yearLow&#34;:165.25,&#34;perChange365d&#34;:17.7,&#34;perChange30d&#34;:4.76},{&#34;symbol&#34;:&#34;METROPOLIS&#34;,&#34;identifier&#34;:&#34;METROPOLISEQN&#34;,&#34;open&#34;:1525,&#34;dayHigh&#34;:1536.9,&#34;dayLow&#34;:1523.1,&#34;lastPrice&#34;:1525,&#34;previousClose&#34;:1514.75,&#34;change&#34;:10.25,&#34;pChange&#34;:0.68,&#34;totalTradedVolume&#34;:25103,&#34;totalTradedValue&#34;:38363659.75,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:13&#34;,&#34;yearHigh&#34;:3579.9,&#34;yearLow&#34;:1318.05,&#34;perChange365d&#34;:-45.54,&#34;perChange30d&#34;:7.97},{&#34;symbol&#34;:&#34;ROUTE&#34;,&#34;identifier&#34;:&#34;ROUTEEQN&#34;,&#34;open&#34;:1398.9,&#34;dayHigh&#34;:1398.9,&#34;dayLow&#34;:1368,&#34;lastPrice&#34;:1385,&#34;previousClose&#34;:1376.15,&#34;change&#34;:8.85,&#34;pChange&#34;:0.64,&#34;totalTradedVolume&#34;:59797,&#34;totalTradedValue&#34;:82765625.66999999,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:07&#34;,&#34;yearHigh&#34;:2389,&#34;yearLow&#34;:1052,&#34;perChange365d&#34;:-32.61,&#34;perChange30d&#34;:-4.22},{&#34;symbol&#34;:&#34;CYIENT&#34;,&#34;identifier&#34;:&#34;CYIENTEQN&#34;,&#34;open&#34;:794.7,&#34;dayHigh&#34;:794.7,&#34;dayLow&#34;:780.15,&#34;lastPrice&#34;:784.65,&#34;previousClose&#34;:779.95,&#34;change&#34;:4.7,&#34;pChange&#34;:0.6,&#34;totalTradedVolume&#34;:23009,&#34;totalTradedValue&#34;:18053781.759999998,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:10&#34;,&#34;yearHigh&#34;:1292,&#34;yearLow&#34;:720,&#34;perChange365d&#34;:-26.61,&#34;perChange30d&#34;:-6.54},{&#34;symbol&#34;:&#34;MEDPLUS&#34;,&#34;identifier&#34;:&#34;MEDPLUSEQN&#34;,&#34;open&#34;:623,&#34;dayHigh&#34;:623,&#34;dayLow&#34;:617,&#34;lastPrice&#34;:619,&#34;previousClose&#34;:615.35,&#34;change&#34;:3.65,&#34;pChange&#34;:0.59,&#34;totalTradedVolume&#34;:5026,&#34;totalTradedValue&#34;:3109887.76,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:28:58&#34;,&#34;yearHigh&#34;:1343,&#34;yearLow&#34;:600,&#34;perChange365d&#34;:&#34;-&#34;,&#34;perChange30d&#34;:-16.58},{&#34;symbol&#34;:&#34;AMBER&#34;,&#34;identifier&#34;:&#34;AMBEREQN&#34;,&#34;open&#34;:2400,&#34;dayHigh&#34;:2400,&#34;dayLow&#34;:2372.05,&#34;lastPrice&#34;:2383.95,&#34;previousClose&#34;:2372.95,&#34;change&#34;:11,&#34;pChange&#34;:0.46,&#34;totalTradedVolume&#34;:18523,&#34;totalTradedValue&#34;:44181615.29,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:08&#34;,&#34;yearHigh&#34;:4025.95,&#34;yearLow&#34;:2040,&#34;perChange365d&#34;:-31.03,&#34;perChange30d&#34;:5.33},{&#34;symbol&#34;:&#34;CHEMPLASTS&#34;,&#34;identifier&#34;:&#34;CHEMPLASTSEQN&#34;,&#34;open&#34;:418,&#34;dayHigh&#34;:420.75,&#34;dayLow&#34;:414.45,&#34;lastPrice&#34;:416.05,&#34;previousClose&#34;:414.25,&#34;change&#34;:1.8,&#34;pChange&#34;:0.43,&#34;totalTradedVolume&#34;:18925,&#34;totalTradedValue&#34;:7912921,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:15&#34;,&#34;yearHigh&#34;:826,&#34;yearLow&#34;:382.7,&#34;perChange365d&#34;:-31.07,&#34;perChange30d&#34;:-2},{&#34;symbol&#34;:&#34;MRPL&#34;,&#34;identifier&#34;:&#34;MRPLEQN&#34;,&#34;open&#34;:62,&#34;dayHigh&#34;:62.4,&#34;dayLow&#34;:60.1,&#34;lastPrice&#34;:60.45,&#34;previousClose&#34;:60.2,&#34;change&#34;:0.25,&#34;pChange&#34;:0.42,&#34;totalTradedVolume&#34;:1085279,&#34;totalTradedValue&#34;:66202019,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:14&#34;,&#34;yearHigh&#34;:127.65,&#34;yearLow&#34;:37.05,&#34;perChange365d&#34;:18.39,&#34;perChange30d&#34;:-17.19},{&#34;symbol&#34;:&#34;CAMS&#34;,&#34;identifier&#34;:&#34;CAMSEQN&#34;,&#34;open&#34;:2507,&#34;dayHigh&#34;:2520,&#34;dayLow&#34;:2470,&#34;lastPrice&#34;:2483.5,&#34;previousClose&#34;:2473.25,&#34;change&#34;:10.25,&#34;pChange&#34;:0.41,&#34;totalTradedVolume&#34;:18000,&#34;totalTradedValue&#34;:44797319.99999999,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:13&#34;,&#34;yearHigh&#34;:3250,&#34;yearLow&#34;:2037.15,&#34;perChange365d&#34;:-17.16,&#34;perChange30d&#34;:7.19},{&#34;symbol&#34;:&#34;RADICO&#34;,&#34;identifier&#34;:&#34;RADICOEQN&#34;,&#34;open&#34;:1093.6,&#34;dayHigh&#34;:1095,&#34;dayLow&#34;:1077.3,&#34;lastPrice&#34;:1077.95,&#34;previousClose&#34;:1078.5,&#34;change&#34;:-0.55,&#34;pChange&#34;:-0.05,&#34;totalTradedVolume&#34;:33774,&#34;totalTradedValue&#34;:36585010.02,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:11&#34;,&#34;yearHigh&#34;:1294,&#34;yearLow&#34;:723.2,&#34;perChange365d&#34;:20.29,&#34;perChange30d&#34;:5.06},{&#34;symbol&#34;:&#34;PVR&#34;,&#34;identifier&#34;:&#34;PVREQN&#34;,&#34;open&#34;:1780,&#34;dayHigh&#34;:1783.6,&#34;dayLow&#34;:1730,&#34;lastPrice&#34;:1733.4,&#34;previousClose&#34;:1756.05,&#34;change&#34;:-22.65,&#34;pChange&#34;:-1.29,&#34;totalTradedVolume&#34;:148960,&#34;totalTradedValue&#34;:260633822.4,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:15&#34;,&#34;yearHigh&#34;:2214.85,&#34;yearLow&#34;:1224.05,&#34;perChange365d&#34;:9.78,&#34;perChange30d&#34;:-5.56},{&#34;symbol&#34;:&#34;BAJAJELEC&#34;,&#34;identifier&#34;:&#34;BAJAJELECEQN&#34;,&#34;open&#34;:1204.7,&#34;dayHigh&#34;:1213.25,&#34;dayLow&#34;:1160.1,&#34;lastPrice&#34;:1174.55,&#34;previousClose&#34;:1191,&#34;change&#34;:-16.45,&#34;pChange&#34;:-1.38,&#34;totalTradedVolume&#34;:83267,&#34;totalTradedValue&#34;:98330000.30000001,&#34;lastUpdateTime&#34;:&#34;04-Oct-2022 10:29:15&#34;,&#34;yearHigh&#34;:1380,&#34;yearLow&#34;:858.55,&#34;perChange365d&#34;:-8.87,&#34;perChange30d&#34;:-2.56}] . import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://stockexchangeapi.p.rapidapi.com/price/AAPL&quot;)) .header(&quot;X-RapidAPI-Key&quot;, &quot;8a72a745admsh4f6260fd91442a9p17d011jsn6dc5cd0e2605&quot;) .header(&quot;X-RapidAPI-Host&quot;, &quot;stockexchangeapi.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); System.out.println(response.body()); . {&#34;annualDividendYield&#34;: &#34;0.008064727&#34;,&#34;ask&#34;: &#34;391.12&#34;,&#34;avgDailyVol10Days&#34;: &#34;31473016&#34;,&#34;avgDailyVol3months&#34;: &#34;35536849&#34;,&#34;bid&#34;: &#34;391.02&#34;,&#34;company&#34;: &#34;Apple Inc.&#34;,&#34;currency&#34;: &#34;USD&#34;,&#34;delay&#34;: &#34;0&#34;,&#34;exchangeName&#34;: &#34;NasdaqGS&#34;,&#34;exchangeTimezone&#34;: &#34;EDT&#34;,&#34;fiftyDayAvg&#34;: &#34;349.5147&#34;,&#34;high&#34;: &#34;389.02&#34;,&#34;low&#34;: &#34;375.52&#34;,&#34;previousClose&#34;: &#34;381.91&#34;,&#34;price&#34;: &#34;388.23&#34;,&#34;symbol&#34;: &#34;AAPL&#34;,&#34;symbolName&#34;: &#34;Apple&#34;,&#34;volume&#34;: &#34;40882505&#34;} . Hacks Questions: . What are the benefits of using an API? . Connect applications with online values | Data organization is much simpler | Constant updates and website is more up to date | . What are the benefits of backend implementation? . More flexibility and control over what&#39;s being worked on | Easier to manage without changing what customers see | .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/pbl/2022/10/01/api.html",
            "relUrl": "/jupyter/pbl/2022/10/01/api.html",
            "date": " • Oct 1, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Tri 1 Project Design",
            "content": "Background . If you need to practice or study for any test, flashcards/memorization is often the way to go | Quizlet is now paid - we need a better alternative solution | . Quiz Me! . Brain Write . A tool that has similar functionality to Quizlet | Users can create an account and put in terms and definitions one-by-one | They can add in multiple choice questions that they find online or the site can automatically create it for them | For more complicated questions, they can create a blog post and have a peer in the class help them with an answer | For math questions, this may include posting explanations or showing problem work | Video Tutorial w/ Tips and Basic Instructions on Website | . Wire Frame . . . Modeling . . Baseline Project Goals . Create an online tool that has flashcards and a way to test yourself in an MC format | Users can take practice quizzes that we create beforehand or input their own data | Meant to replace Quizlet | . Further Ideas . Use OCR to read written flashcards and put them on a computer | Read data from an Excel or Google Sheet file and import it into flashcards | Use images as flashcards for people who want to remember specific things from an image | Make a matching game between terms and definitions | .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/pbl/2022/09/26/tri1projectdesign.html",
            "relUrl": "/markdown/pbl/2022/09/26/tri1projectdesign.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "Fibonacci Classes w/ Collegeboard Learnings",
            "content": "For Loop . import java.util.Scanner; //library to take user input public class ForLoopFibo { public static void main(String[] args) { int amountentered, termone = 0, termtwo = 1; //defines variables being used System.out.println(&quot;Amount of terms?&quot;); Scanner scanner = new Scanner(System.in); // takes in user input for amount of terms amountentered = scanner.nextInt(); System.out.print(&quot;Here is the Fibonacci Sequence for &quot; + amountentered + &quot; terms:&quot;); for (int i = 1; i &lt;= amountentered; ++i) // for each term if the term is less than or equal to the amount entered { System.out.print(&quot; n&quot; + termone); // print out the previous term or initial term int sumOfPrevTwo = termone + termtwo; // adds up the two terms termone = termtwo; // returns the two terms back to the for loop to repeat again termtwo = sumOfPrevTwo; } } } ForLoopFibo.main(null); . Amount of terms? Here is the Fibonacci Sequence for 8 terms: 0 1 1 2 3 5 8 13 . While Loop . import java.util.Scanner; //library to take user input public class WhileLoopFibo { public static void main(String[] args) { int amountentered, termone = 0, termtwo = 1; //defines variables being used System.out.println(&quot;Amount of terms?&quot;); Scanner scanner = new Scanner(System.in); // takes in user input for amount of terms amountentered = scanner.nextInt(); System.out.print(&quot;Here is the Fibonacci Sequence for &quot; + amountentered + &quot; terms:&quot;); int i=1; while(i &lt;= amountentered) { System.out.print(&quot; n&quot; + termone); // fibonnaci program w/ while loop int sumOfPrevTwo = termone + termtwo; termone = termtwo; termtwo = sumOfPrevTwo; i++; } } } WhileLoopFibo.main(null); . Amount of terms? Here is the Fibonacci Sequence for 10 terms: 0 1 1 2 3 5 8 13 21 34 . Recursion . import java.util.Scanner; //library to take user input int amt; //defines variables being used System.out.println(&quot;Amount of terms?&quot;); Scanner scanner = new Scanner(System.in); // takes in user input for amount of terms amt = scanner.nextInt(); class RecursionLoop { // recursively puts the term number back into the program and adds the term 2 less than the current to the term 1 less than the current static int fib(int fibamt) { if (fibamt &lt;= 1) { return fibamt; } else { return fib(fibamt - 1) + fib(fibamt - 2); } } public static void main(String args[]) { System.out.print(&quot;Here is the Fibonacci Sequence for &quot; + amt + &quot; terms:&quot;); for (int term = 0; term &lt; amt; term++) { // prints out the terms using for loop for each term calculated in the recursionloop System.out.print(&quot; n&quot; + fib(term)); } } } RecursionLoop.main(null); . Amount of terms? Here is the Fibonacci Sequence for 15 terms: 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 . Hacks Questions . Skill 1.B: Used different types of loops or methods of program for each situation . Skill 4.C: Code segments produce same results because the output is printed in the same format, the only thing changing is the type of loop. Key Finding: Different Loops can produce same output as long as the loops have the same purpose- in this case with for and while loops . Skill 5.A: While loops and for loops run the fastest, while recursion is much slower. .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/pbl/2022/09/23/fibo.html",
            "relUrl": "/jupyter/pbl/2022/09/23/fibo.html",
            "date": " • Sep 23, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "Methods and Control Structures Quiz",
            "content": "Quiz Questions: . 1) Which is the proper syntax for declaring a method? . A. returnType methodName() {} | B. int methodName() {} | C. methodName returnType () {} | . 2) A switch can substitute or act as what other flow control? . A. if statements | B. while loop | C. console output | D. != operator | . 3) Every if statement requires an else. . True/False . 4) For the following code: . int x = 3; float y = 3.0; if (x == y) { System.out.println(x and y are equal”); } else { System.out.println(x and y are not equal”); } . What does this code return? . A. x and y are not equal | B. x and y are equal | . 5) Which of the following specifies that a statement will be executed if and only if a certain boolean statement is true? . A. if-else statement | B. if statement | C. else if statement | D. nested if-else atement | . Correct Answers: A, A, False, B, B .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/pbl/2022/09/20/methodsquiz.html",
            "relUrl": "/markdown/pbl/2022/09/20/methodsquiz.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "ASCII Art Notebook for Bees",
            "content": "class BeeLoop { String [][] bee; public BeeLoop() { bee = new String[][]{ //all the bees { &quot; / &quot;, &quot; o ^ o / &quot;, &quot; ( ) / &quot;, &quot; ____________(%%%%%%%)____________ &quot;, &quot;( / / )%%%%%%%( )&quot;, &quot;(___/___/__/ __ ___ ___)&quot;, &quot; ( / /(%%%%%%%) ) &quot;, &quot; (__/___/ (%%%%%%%) ___ __) &quot;, &quot; /( ) &quot;, &quot; / (%%%%%) &quot;, &quot; (%%%) &quot;, &quot; ! &quot; }, { &quot; / &quot;, &quot; o ^ o / &quot;, &quot; ( ) / &quot;, &quot; ____________(%%%%%%%)____________ &quot;, &quot;( / / )%%%%%%%( )&quot;, &quot;(___/___/__/ __ ___ ___)&quot;, &quot; ( / /(%%%%%%%) ) &quot;, &quot; (__/___/ (%%%%%%%) ___ __) &quot;, &quot; /( ) &quot;, &quot; / (%%%%%) &quot;, &quot; (%%%) &quot;, &quot; ! &quot; }, { &quot; / &quot;, &quot; o ^ o / &quot;, &quot; ( ) / &quot;, &quot; ____________(%%%%%%%)____________ &quot;, &quot;( / / )%%%%%%%( )&quot;, &quot;(___/___/__/ __ ___ ___)&quot;, &quot; ( / /(%%%%%%%) ) &quot;, &quot; (__/___/ (%%%%%%%) ___ __) &quot;, &quot; /( ) &quot;, &quot; / (%%%%%) &quot;, &quot; (%%%) &quot;, &quot; ! &quot; }, { &quot; / &quot;, &quot; o ^ o / &quot;, &quot; ( ) / &quot;, &quot; ____________(%%%%%%%)____________ &quot;, &quot;( / / )%%%%%%%( )&quot;, &quot;(___/___/__/ __ ___ ___)&quot;, &quot; ( / /(%%%%%%%) ) &quot;, &quot; (__/___/ (%%%%%%%) ___ __) &quot;, &quot; /( ) &quot;, &quot; / (%%%%%) &quot;, &quot; (%%%) &quot;, &quot; ! &quot; }, }; } public void BeeSong() { System.out.println(); System.out.println(&quot;The Bee Buzzing Song!&quot;); int BeeCount = bee.length; for (int i = BeeCount; i &gt;= 1; i--) { System.out.println(&quot;The bees go buzzing &quot; + i + &quot; by &quot; + i); System.out.println(&quot;Hoorah! Hoorah!&quot;); System.out.println(&quot;The little one stops to look around!&quot;); for (int row = 0; row &lt; BeeCount; row++) { for (int col = 0; col &lt; bee[row].length; col++) { System.out.print(bee[row][col] + &quot; &quot;); System.out.println(); } System.out.println(); } BeeCount -= 1; } System.out.println(&quot;And they all go flying high, in the sky,&quot;); System.out.println(&quot;To go back, to their hive&quot;); System.out.println(&quot; THE END &quot;); } public static void main(String[] args) { new BeeLoop().BeeSong(); } } BeeLoop.main(null); . The Bee Buzzing Song! The bees go buzzing 4 by 4 Hoorah! Hoorah! The little one stops to look around! / o ^ o / ( ) / ____________(%%%%%%%)____________ ( / / )%%%%%%%( ) (___/___/__/ __ ___ ___) ( / /(%%%%%%%) ) (__/___/ (%%%%%%%) ___ __) /( ) / (%%%%%) (%%%) ! / o ^ o / ( ) / ____________(%%%%%%%)____________ ( / / )%%%%%%%( ) (___/___/__/ __ ___ ___) ( / /(%%%%%%%) ) (__/___/ (%%%%%%%) ___ __) /( ) / (%%%%%) (%%%) ! / o ^ o / ( ) / ____________(%%%%%%%)____________ ( / / )%%%%%%%( ) (___/___/__/ __ ___ ___) ( / /(%%%%%%%) ) (__/___/ (%%%%%%%) ___ __) /( ) / (%%%%%) (%%%) ! / o ^ o / ( ) / ____________(%%%%%%%)____________ ( / / )%%%%%%%( ) (___/___/__/ __ ___ ___) ( / /(%%%%%%%) ) (__/___/ (%%%%%%%) ___ __) /( ) / (%%%%%) (%%%) ! The bees go buzzing 3 by 3 Hoorah! Hoorah! The little one stops to look around! / o ^ o / ( ) / ____________(%%%%%%%)____________ ( / / )%%%%%%%( ) (___/___/__/ __ ___ ___) ( / /(%%%%%%%) ) (__/___/ (%%%%%%%) ___ __) /( ) / (%%%%%) (%%%) ! / o ^ o / ( ) / ____________(%%%%%%%)____________ ( / / )%%%%%%%( ) (___/___/__/ __ ___ ___) ( / /(%%%%%%%) ) (__/___/ (%%%%%%%) ___ __) /( ) / (%%%%%) (%%%) ! / o ^ o / ( ) / ____________(%%%%%%%)____________ ( / / )%%%%%%%( ) (___/___/__/ __ ___ ___) ( / /(%%%%%%%) ) (__/___/ (%%%%%%%) ___ __) /( ) / (%%%%%) (%%%) ! The bees go buzzing 2 by 2 Hoorah! Hoorah! The little one stops to look around! / o ^ o / ( ) / ____________(%%%%%%%)____________ ( / / )%%%%%%%( ) (___/___/__/ __ ___ ___) ( / /(%%%%%%%) ) (__/___/ (%%%%%%%) ___ __) /( ) / (%%%%%) (%%%) ! / o ^ o / ( ) / ____________(%%%%%%%)____________ ( / / )%%%%%%%( ) (___/___/__/ __ ___ ___) ( / /(%%%%%%%) ) (__/___/ (%%%%%%%) ___ __) /( ) / (%%%%%) (%%%) ! The bees go buzzing 1 by 1 Hoorah! Hoorah! The little one stops to look around! / o ^ o / ( ) / ____________(%%%%%%%)____________ ( / / )%%%%%%%( ) (___/___/__/ __ ___ ___) ( / /(%%%%%%%) ) (__/___/ (%%%%%%%) ___ __) /( ) / (%%%%%) (%%%) ! And they all go flying high, in the sky, To go back, to their hive THE END . Hacks: . This program is in more of an Imperative Programming Style. Imperative Programming is based on functions that change at each step. In this case, the function of the program is constantly changing so this is Imperative Programming. | Each bee is not an object | .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/pbl/2022/09/16/hacksminilab.html",
            "relUrl": "/jupyter/pbl/2022/09/16/hacksminilab.html",
            "date": " • Sep 16, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "2019 FRQ Question No. 1",
            "content": "2019 AP® Computer Science A Free-Response Question #1 . public class APCalendar { /** Returns true if year is a leap year and false otherwise. */ private static boolean isLeapYear(int year) { /* implementation not shown */ } /** Returns the number of leap years between year1 and year2, inclusive. * Precondition: 0 &lt;= year1 &lt;= year2 */ public static int numberOfLeapYears(int year1, int year2) { /* to be implemented in part (a) */ } /** Returns the value representing the day of the week for the first day of year, * where 0 denotes Sunday, 1 denotes Monday, ..., and 6 denotes Saturday. */ private static int firstDayOfYear(int year) { /* implementation not shown */ } /** Returns n, where month, day, and year specify the nth day of the year. * Returns 1 for January 1 (month = 1, day = 1) of any year. * Precondition: The date represented by month, day, year is a valid date. */ private static int dayOfYear(int month, int day, int year) { /* implementation not shown */ } /** Returns the value representing the day of the week for the given date * (month, day, year), where 0 denotes Sunday, 1 denotes Monday, ..., * and 6 denotes Saturday. * Precondition: The date represented by month, day, year is a valid date. */ public static int dayOfWeek(int month, int day, int year) { /* to be implemented in part (b) */ } // There may be instance variables, constructors, and other methods not shown. } . Part a . Write the static method numberOfLeapYears, which returns the number of leap years between year1 and year2, inclusive. . In order to calculate this value, a helper method is provided for you. • isLeapYear(year) returns true if year is a leap year and false otherwise . int year; // defines the variable we&#39;re using for each year public static int numberOfLeapYears(int year1, int year2) { int LeapYearAmount; // defines the variable we&#39;re using to count the leap year amount for (int year = year1; year &lt;= year2; year++) { // for each year between year 1 and year 2 if (isLeapYear(year)) { // if the year is a leap year, add one to the count LeapYearAmount+=1; } } } . Part b . Write the static method dayOfWeek, which returns the integer value representing the day of the week for the given date (month, day, year), where 0 denotes Sunday, 1 denotes Monday, ..., and 6 denotes Saturday. For example, 2019 began on a Tuesday, and January 5 is the fifth day of 2019. As a result, January 5, 2019, fell on a Saturday, and the method call dayOfWeek(1, 5, 2019) returns 6. . public static int dayOfWeek(int month, int day, int year) // calls the method to find the day of the week { int DayFirst = firstDayOfYear(year); // finds what the first day of the year is for the given year int DaysAfter = dayOfYear(month, day, year); // finds how many days after the start of the year int CalculatedDay = (int DayFirst + int DaysAfter - 1) // adds the amount to the first day and subtracts 1 int DayWeekReturn = int CalculatedDay % 7; // changes from a number to a value 0-6 that gives the day of the week return DayWeekReturn; // returns the day of the week } .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/pbl/2022/09/13/frqno1.html",
            "relUrl": "/jupyter/pbl/2022/09/13/frqno1.html",
            "date": " • Sep 13, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "Ifs and Expressions",
            "content": "If and Expressions Notebook . if: If condition1 happens, then do result1 . if-else: If condition1 happens, do result1. Otherwise, do result2. . if-elseif-else: If condition1 happens, do result1. If condition1 does not happen and condition2 does happen, do result2. Else, do result3. . import java.util.Random; int random_num = 0; // defining random number variable Random num = new Random(); random_num = num.nextInt(6) + 1; // generating random number from 1-6 to simulate diceroll // Checking what the result of a diceroll is if (random_num == 1) { System.out.println(&quot;You rolled a 1&quot;); // checks if the roll is equal to 1 } else if (random_num == 2) { System.out.println(&quot;You rolled a 2&quot;); // checks if the roll is equal to 2 } else if (x == 3) { System.out.println(&quot;You rolled a 3&quot;); // checks if the roll is equal to 3 } else if (x == 4){ System.out.println(&quot;You rolled a 4&quot;); // checks if the roll is equal to 4 } else if (x == 5){ System.out.println(&quot;You rolled a 5&quot;); // checks if the roll is equal to 5 } else { System.out.println(&quot;You rolled a 6&quot;); // checks if the roll is equal to 6 } . You rolled a 5 . Switch Case Example: . Checks multiple conditions at one time | Works with all data types | Different condition for each case | Final case is the default, when none of the conditions are met | Cleaner code | . import java.util.Random; int random_num = 0; // defining random number variable Random num = new Random(); random_num = num.nextInt(6) + 1; // generating random number from 1-6 to simulate diceroll // Checking what the result of a diceroll is switch (random_num) { case 1: random_num = 1; break; case 2: random_num = 2; break; case 3: random_num = 3; break; case 4: random_num = 4; break; case 5: random_num = 5; break; case 6: random_num = 6; break; default: break; } System.out.println(&quot;You rolled a &quot; + random_num + &quot; this time&quot;); . You rolled a 1 this time . De Morgan&#39;s Law: . Dictates how we negate an AND statement + an OR statement | !(a &amp;&amp; b) is equivalent to !a || !b This means that not (a and b) is equal to not a or not b | !(a || b) is equivalent to !a &amp;&amp; !b This means that not (a or b) is equal to not a and not b | . In java, we can use this with true and false instead of a and b . if (!((true == true) &amp;&amp; (true == false))) { System.out.println(&quot;Worked&quot;); } else { System.out.println(&quot;Didn&#39;t work&quot;); } . Worked . Resources I used: . https://www.w3schools.com/java/java_switch.asp . https://exlskills.com/learn-en/courses/java-selection-statements-selection_statements_java/selection-statements-HmvmejKsdGBS/logical-operators-FidIKfVaKgJG/de-morgans-law-CASLTiREzqXY .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/pbl/2022/09/11/ifandexpressions.html",
            "relUrl": "/jupyter/pbl/2022/09/11/ifandexpressions.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "Focus and Habits",
            "content": "Notes from the Video with Feedback . Well being and mental health on college campuses is often at risk, but it matters | Many students find themselves being too stressed to enjoy out on school and the memories they make | Reading books for pleasure can help | Students are missing out on the fantastic education because they’re too stressed during it | People with better well-beings are more likely to be successful | It’s important to treat yourself to something nice to keep yourself happy | Write notes of gratitude to someone or something you’re thankful for | We need to spend more times thinking about our health and caring for ourself | Exercise helps health as well | We want to be good people and do stuff that we enjoy, not that we’re forced to do | . I enjoyed the video and thought that Professor Santos spoke well about ways that we can improve our lives. I think it would’ve been interesting if she had examples of how that worked out for students at a separate university and evidence of these techniques helping other students improve their well-being. . Note of Gratitude . To my family, . Thank you to for always supporting me and giving me advice. I am inspired by all of you every single day. I am so thankful for all the help you provide me and I am fortunate to live the life that I currently do. . Things I am Grateful For . Friends | Family | Access to food and water | Positivity of those around me | . Goals . Create a resume | Use a growth mindset and be more positive | Spend less time being stressed and focus more on my well-being | . My Interests . Interests . Computer Science | Programming | Going for Hikes/Walks | Java | . Skills . Python | Learning new things | .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/2022/09/11/focushabits.html",
            "relUrl": "/markdown/2022/09/11/focushabits.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Code.org Learnings (1-15)",
            "content": "Learnings + Screen Grabs from Lessons 1-15 . Code.org learning Follow the Neighborhood lessons and work through the OOP Unit. - Completed . Learned how to create different types of classes and objects | Learned while and if loops and syntax for them | . . Imports objects from other files instead of cluttering too much code in each file which increases efficiency | . . Vunsh helped with this –&gt; using “this” is a lot easier in some situations when defining methods | . . Objects and Extends . Discuss creating and Using Objects . Class obj = new Class(); | Syntax above shows how to create new object | Use object in a class Discuss extends | Code: public class Subclass extends SuperClass | Subclass extend the Superclass | .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/2022/09/05/code1to15learnings.html",
            "relUrl": "/markdown/2022/09/05/code1to15learnings.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "My Console",
            "content": "Check out the Console! . // always start off our code with importing libraries that we will use import java.util.Scanner; //library to take user input import java.lang.Math; //library to use math and numbers public class Menu { // class is defined // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Hello World&quot;); System.out.println(&quot;2 - Squaring a Number&quot;); System.out.println(&quot;3 - ACT Score Calculator&quot;); System.out.println(&quot;4 - Print Colors&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } private void squarenumber() { Scanner input = new Scanner(System.in); double inp_number; // used int and double wrapper classes here double final_number; System.out.print(&quot;What is your number? n&quot;); inp_number = input.nextInt(); final_number = inp_number * inp_number; // used math class System.out.print(inp_number + &quot; squared is equal to &quot; + final_number); //mutating data } private void act_calculator() { Scanner input = new Scanner (System.in); int english, math, reading, science, sum, comp_score; System.out.println (&quot;Enter English Score: &quot;); english = input.nextInt(); System.out.println (&quot;Enter Math Score: &quot;); math = input.nextInt(); System.out.println (&quot;Enter Reading Score: &quot;); reading = input.nextInt(); System.out.println (&quot;Enter Science Score: &quot;); science = input.nextInt(); input.close(); sum = (english + math + reading + science); comp_score = ((english + math + reading + science) / 4); if (sum % 4 &lt; 2) { System.out.println(&quot;Your composite score is equal to &quot; + comp_score); } else if (sum % 4 == 0) { System.out.println(&quot;Your composite score is equal to &quot; + comp_score); } else { comp_score += 1; System.out.println(&quot;Your composite score is equal to &quot; + comp_score); } } private boolean action(int selection) { boolean quit = false; switch (selection) { case 0: System.out.print(&quot;Thank you for using this console! n&quot;); quit = true; break; case 1: System.out.print(&quot;Hello World! n&quot;); break; case 2: squarenumber(); // instance of a class is defined break; case 3: act_calculator(); // calling a method break; case 4: System.out.print(&quot;Colors Used: Red, Green, Yellow, Blue, Purple, Cyan, White&quot;); break; default: System.out.print(&quot;Unexpected choice, try again.&quot;); // prints error message if the input is wrong break; } System.out.println(DEFAULT); // resets color, gives new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . - Choose from these choices - 1 - Hello World 2 - Squaring a Number 3 - ACT Score Calculator 4 - Print Colors 0 - Quit - 1: Hello World! 2: What is your number? 24.0 squared is equal to 576.0 3: Enter English Score: Enter Math Score: Enter Reading Score: Enter Science Score: Your composite score is equal to 35 4: Colors Used: Red, Green, Yellow, Blue, Purple, Cyan, White 5: Unexpected choice, try again. 0: Thank you for using this console! . Describe Console, GUI differences, or Code.org differences. . Console . Less interactive and visual | Used for terminal environments | More durable and can be used in more workspaces | Easily distributable | This program is on console | . GUI: . Interactive and visual | Easier for newer users | Not easy to distribute to other environments | . Code.org: . Mix of console and GUI | Visually shows all changes you make in your programming environment | Simpler and easier to use | Designed for newer learners | .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/pbl/2022/09/04/console.html",
            "relUrl": "/jupyter/pbl/2022/09/04/console.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "CS Alumni Panel Notes",
            "content": "Event Description . Panel: Colin, Anthony, Andrew, Mabel, Allison, Nitya Date: 08/29/2022 . Getting Started and Staying with CS: . Everyone faces issues, keep persevering especially at the start | Don’t get worried or caught up with what others are doing | Biggest challenges as a programmer include people not putting in full effort or easily losing motivation, just keep working hard and don’t cut corners | Having mindset to go above and beyond smalls many problems in the long term | UCSD has some PBL projects and some individual projects | Programming helps with all assignments and is useful even if you don’t major in CS | Matlab or other mathematical libraries are very useful | CS is always present in math and other majors | Have a resume prepared and try to go above and beyond, stand out to teachers at colleges | Separate yourself and reference how you make yourself different from others | . PBL Information: . Will have to use Scrum Methodologies, Agile Flow | Colleges have PBL and tests | Some styles of project based learning work for some people | . Interning: . Most interns don’t know much entering their work, you learn a lot in internships | Lots of problem solving logic learnt from CS applies to aspects of life | Technical revisions, wiring diagrams at NG | Code Ninjas offers jobs as well | Internships involve lots of scripting | Worked on web apps | . Final Takeaways: . Stick with computer science and keep persevering | Jobs are promising in CS careers and whether or not you choose to pursue it as a career or major, knowledge of CS will always be applied and help you | Ask for help when you need to, don’t be afraid to make mistakes and grow when you are working | Your peers and teacher can help guide you and you should really make sure you are learning and getting the proper takeaways from lesson | Take computer science seriously and it’ll take you over | Work on personal project, pursue your own opportunities because they look great on a resume (graph theory, data visualization) | . My Thoughts: . I really enjoyed the lesson. I’m very interested in the field of Computer Science and I think it’d be a great opportunity to pursue in the future. Since I am just getting started with AP CSA, I think that it’s definitely difficult but I have been able to apply my previous knowledge to what I’m working on and I’m confident that what I learn in this class will apply to anything I do later on in life even if it doesn’t directly pertain to Computer Science. I was inspired by the panel members to perservere and stick with things in the class and I am confident that I can learn a lot throughout this entire class. I have a better understanding of what I would want to pursue in the future and I am really glad that I got to learn from the panel members. I have ideas for a possible personal project that I’d want to pursue and I am further inspired to work towards it because of the panel session today. . Footnotes .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/2022/08/29/alumnitalknotes.html",
            "relUrl": "/markdown/2022/08/29/alumnitalknotes.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "Java Primitives",
            "content": "Class w/ Integer . /// Used for numbers public class TestInt{ static int data = 5; public static void main(String args[]){ TestInt obj = new TestInt(); System.out.println(&quot;Integer is &quot;+TestInt.data); } } TestInt.main(null); . Integer is 5 . Class w/ Double . /// Used for values that have decimals public class TestDouble{ static double data = 5.0; public static void main(String args[]){ TestDouble obj = new TestDouble(); System.out.println(&quot;Integer is &quot;+TestDouble.data); } } TestDouble.main(null); . Integer is 5.0 . Class w/ Boolean . /// Used to verify if something is true or false, usually to see if something exists public class TestBoolean { public static void main(String[] args) { Boolean var1 = new Boolean(&quot;True&quot;); Boolean var2 = new Boolean(&quot;False&quot;); boolean print1 = var1.booleanValue(); boolean print2 = var2.booleanValue(); System.out.println(print1); System.out.println(print2); } } TestBoolean.main(null); . true false . Class w/ String . /// Used for any type of characters, mainly phrases or words public class TestString { public static void main(String args[]) { Scanner stringval = new Scanner(System.in); System.out.println(&quot;Enter a string value:&quot;); String str = stringval.nextLine(); System.out.println(str); } } TestString.main(null); . Enter a string value: I love AP CSA . Arithmetic Program Code . public class Adding{ public static void main(String[] args){ double val1 = 7.5, val2 = 3.1, sum; sum = val1 + val2; System.out.println(&quot;The two numbers added up is equal to &quot; + sum); } } Adding.main(null); /// We use integers for non-decimal numbers and double for any number, but mainly when we want to use decimals as well. . The two numbers added up is equal to 10.6 . Arithmetic Expressions w/ Casting . String start = &quot;The total of the two numbers is equal to &quot;; int val1 = 3; int val2 = 6; int total= (val1 + val2); String finalexp = start + total; System.out.println(finalexp); . The total of the two numbers is equal to 9 . Using compound assignment operator . int val = 250; val += 200; /// Adds 200 to the integer val System.out.println(val); val -= 200; /// Substracts 200 from the integer val System.out.println(val); val %= 6; /// Performs 250 mod 6 System.out.println(val); . 450 250 4 . PPG Calculator . import java.util.Scanner; /// import a class to allow us to take user inputs public class CalculatePPG{ public static void main (String[] args){ int game1, game2, game3, sum; /// define all variables as integers double average; /// define average value as a decimal value Scanner sc = new Scanner(System.in); /// take user input for points scored in all games System.out.println(&quot;Enter points scored in game 1: &quot;); game1 = sc.nextInt(); sum = game1; System.out.println(&quot;Enter points scored in game 2: &quot;); game2 = sc.nextInt(); sum += game2; System.out.println(&quot;Enter points scored in game 3: &quot;); game3 = sc.nextInt(); sum += game3; average = sum / 3; /// calculate average ppg System.out.println(&quot;Average PPG is equal to &quot; + average); /// print average ppg System.out.println(&quot;Total scored over the games is equal to &quot; + sum); /// print sum } } CalculatePPG.main(null); /// Let&#39;s test our program with an average from 3 of Steph Curry&#39;s games: 34, 16, 43 . Enter points scored in game 1: Enter points scored in game 2: Enter points scored in game 3: Average PPG is equal to 31.0 Total scored over the games is equal to 93 .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/collegeboard%20learning/2022/08/28/java-primitives.html",
            "relUrl": "/jupyter/collegeboard%20learning/2022/08/28/java-primitives.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Bash Hacks",
            "content": "Bash Version Check . echo &quot;${BASH_VERSION}&quot; . 5.0.17(1)-release . JS Version Check . npm --version . 3.10.10 . Java Installation Check . javac --version java --version . javac 11.0.16 openjdk 11.0.16 2022-07-19 OpenJDK Runtime Environment (build 11.0.16+8-post-Ubuntu-0ubuntu120.04) OpenJDK 64-Bit Server VM (build 11.0.16+8-post-Ubuntu-0ubuntu120.04, mixed mode, sharing) . Python Installation Check . python --version python2 --version . Python 3.9.12 Python 2.7.18 . Check Kernels: . jupyter --version # Checks what jupyter kernels are available and notifies the user which ones are not there. jupyter kernelspec list &gt; kernels.txt cat kernels.txt if grep -Fq &quot;bash&quot; kernels.txt then echo &quot;Bash is present&quot; else echo &quot;Bash is not present&quot; fi if grep -Fq &quot;java&quot; kernels.txt then echo &quot;Java is present&quot; else echo &quot;Java is not present&quot; fi if grep -Fq &quot;javascript&quot; kernels.txt then echo &quot;Javascript is present&quot; else echo &quot;Javascript is not present&quot; fi if grep -Fq &quot;python3&quot; kernels.txt then echo &quot;Python is present&quot; else echo &quot;Python is not present&quot; fi . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: bash /home/aarav/.local/share/jupyter/kernels/bash java /home/aarav/.local/share/jupyter/kernels/java javascript /home/aarav/.local/share/jupyter/kernels/javascript python3 /home/aarav/anaconda3/share/jupyter/kernels/python3 Bash is present Java is present Javascript is present Python is present . Verifying with Conda . conda list &gt; condapackages.txt cat condapackages.txt if grep -Fq &quot;bash-kernel&quot; condapackages.txt then echo &quot;Bash is present&quot; else echo &quot;Bash is not present&quot; fi if grep -Fq &quot;python&quot; condapackages.txt then echo &quot;Python is present&quot; else echo &quot;Python is not present&quot; fi if grep -Fq &quot;jupyter&quot; kernels.txt then echo &quot;Jupyter is present&quot; else echo &quot;Jupyter is not present&quot; fi . # packages in environment at /home/aarav/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.8.0 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.14.0 py39hf3d152e_0 conda-forge conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 conda-forge libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.13.1 0 conda-forge nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 python_abi 3.9 2_cp39 conda-forge pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 Bash is present Python is present Jupyter is present . Packages Check . echo &quot;Which package are you checking?&quot; read package # Searches the system&#39;s list of packages to see if it&#39;s installed dpkg -l | grep $package . System Updates and File Permissions - A script to automatically update system and set permissions on important system files . sudo apt-get update sudo apt-get upgrade sudo apt-get dist-upgrade sudo apt-get install bash sudo apt-get install --only-upgrade firefox if [ -e &quot;/etc/passwd&quot; ]; then sudo chgrp root /etc/passwd sudo chmod 0644 /etc/passwd echo -e &quot;/etc/passwd - ${LG}done ${NC}&quot; else echo -e &quot;/etc/passwd - ${LR}does not exist${NC}&quot; fi #/etc/group if [ -e &quot;/etc/group&quot; ]; then sudo chgrp root /etc/group sudo chmod 0644 /etc/group echo -e &quot;/etc/group - ${LG}done ${NC}&quot; else echo -e &quot;/etc/group - ${LR}does not exist${NC}&quot; fi #/etc/shadow if [ -e &quot;/etc/shadow&quot; ]; then sudo chmod 0000 /etc/shadow sudo chgrp root /etc/shadow echo -e &quot;/etc/shadow - ${LG}done ${NC}&quot; else echo -e &quot;/etc/shadow - ${LR}does not exist${NC}&quot; fi #/etc/gshadow if [ -e &quot;/etc/gshadow&quot; ]; then sudo chmod 0000 /etc/gshadow sudo chgrp root /etc/gshadow echo -e &quot;/etc/gshadow - ${LG}done ${NC}&quot; else echo -e &quot;/etc/gshadow - ${LR}does not exist${NC}&quot; fi #/etc/securetty if [ -e &quot;/etc/securetty&quot; ]; then sudo chown root:root /etc/securetty sudo chmod 0600 /etc/securetty echo -e &quot;/etc/securetty - ${LG}done ${NC}&quot; else echo -e &quot;/etc/securetty - ${LR}does not exist${NC}&quot; fi . Updating a Repository . git pull # After any changes are made: echo &quot;What is the commit message?&quot; read message git commit -m &quot;$message&quot; git push origin master . Already up to date. What is the commit message? .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/collegeboard%20learning/2022/08/28/bash_hacks.html",
            "relUrl": "/jupyter/collegeboard%20learning/2022/08/28/bash_hacks.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "APUSH Notes Ch. 1",
            "content": "What does this contain? . It has all the key terms from AP US History Chapter 1. . Terms . Nation-State: The form of political society that traditionally combines centralized government with a high degree of ethnic and cultural unity. . Confederacy: An alliance or league of nations or peoples looser than a federation. . Matrilinear: The form of society in which family line, power, and wealth are passed primarily through the female side. . Primeval: Concerning the earliest origin of things;of ancient age . Saga: A lengthy story or poem recounting the great deeds and adventures of a people and their heroes. . Middlemen: In trading systems , those dealers who operate between the original producers of goods and the retail merchants who sell to customers. . Caravel Small: regular vessel with a high deck and three triangular sails. Caravels could sail more closely into the wind, allowing European sailors to explore the Western shores of Africa, previously made inaccessible due to prevailing winds on homeward journey . Plantation(s): Large-scale agricultural enterprise growing commercial crops, usually employing coerced or slave labor. European settlers established plantations in Africa, South America, the Caribbean, and the American South. . Ecosystems: A naturally evolved network of relations among organisms in a stable environment. . Demographic: Concerning the general characteristics of a given population, including such factors as numbers, age, gender, birth and death rates, and so on. . Conquistadores: Sixteenth-century Spanish military adventurers who fanned out across the Americas, from Colorado to Argentina , and eventually conquered the Aztec and Incan empires. . Capitalism: Economic system characterized by private property, generally free trade, and open and accessible markets. European colonization of the Americas, and in particular, the discovery of vast bullion deposits, helped bring about Europe’s transition to capital. . Encomienda: Spanish government’s policy to “commend” or give, Indians to certain colonists in return for the promise to Christianize them. Part of a broader Spanish effort to subdue Indian tribes in the West Indies and on the North American mainland. . Mestizos: People of mixed Indian and European heritage, notably in Mexico. . Province: A medium-sized subunit of territory and governmental administration within a larger nation or empire. . Methods to Study . Review Notes Go Over Terms | Review Important Sections | . | Find practice tests online | .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/2022/08/27/apushnotes.html",
            "relUrl": "/markdown/2022/08/27/apushnotes.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "Unit 1 CB Notes",
            "content": "What does this contain? . It has all the notes + ideas from Collegeboard Unit 1 for AP CSA. . Notes . Call System class methods to generate output to the console. | When creating a variable, identify the most appropraite data type for a particular specification and declare variables of the correct type to represent primitive data. | Primitives can be used to evaluate arithmetic expressions in a program code. | An aassignment state can help find what is stored in a variable. | Arithmetic expressions can use casting. | . Errors Discussion: . A logic error is a mistake in the algorithm or program that causes it to behave incorrectly or unexpectedly. | A syntax error is a mistake in the program where the rules of the programming language are not followed. | A run-time error is a mistake in the program that occurs during the execution of a program. Programming languages define their own run-time errors. | An overflow error is an error that occurs when a computer attempts to handle a number that is outside of the defined range of values. | The following are effective ways to find and correct errors: test cases, hand tracing, visualizations, debuggers, adding extra output statement(s) | . For more details: . https://apstudents.collegeboard.org/sites/default/files/2019-05/ap-computer-science-a-course-and-exam-description.pdf .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/collegeboard%20learning/2022/08/26/unit1-notes.html",
            "relUrl": "/markdown/collegeboard%20learning/2022/08/26/unit1-notes.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "Todo List",
            "content": "AP CSA Work . 11th Grade Class . Weekly Tasks . Task title, type, yyyy-mm-dd Description | . | . Help I Need . Task title, type, yyyy-mm-dd Description | . | . Completed Tasks . Completed task title, type, yyyy-mm-dd | . For Help: . Refer to AP CSA Calendar and then ask peers for help! . Footnotes .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/2022/08/21/todolist.html",
            "relUrl": "/markdown/2022/08/21/todolist.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "Fastpages Python Blog Post",
            "content": "Example Python Notebook . print(&#39;Hello&#39;) . Hello .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/2022/08/21/python_notebook.html",
            "relUrl": "/jupyter/2022/08/21/python_notebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "Fastpages Java Post",
            "content": "public class HelloStatic { public static void main(String[] args) { System.out.println(&quot;Hello&quot;); } } HelloStatic.main(null); . Hello! .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/jupyter/2022/08/21/java_notebook.html",
            "relUrl": "/jupyter/2022/08/21/java_notebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "About Me",
            "content": "About Me . I am 16 years old. . I am excited to pursue new hobbies like programming. . Lists . Here’s a list of things I love doing: . Watching TV Shows | Meeting New People | Playing Games | . Boxes and stuff . “The purpose of our lives is to be happy.” . Images . . Footnotes .",
            "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/markdown/2022/08/21/aboutme.html",
            "relUrl": "/markdown/2022/08/21/aboutme.html",
            "date": " • Aug 21, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . I am 16 years old. . I am excited to pursue new hobbies like programming. . I am really excited to be in AP CSA. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  
  

  

  
  

  

  

  
  

  
  

  
  

  

  

  
  

  
      ,"page15": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://aaravarora01.github.io/AaravArora-APCSA-Fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}